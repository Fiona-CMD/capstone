/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O)
{
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ 'x', 's', 'a', 'v', 'e', 'c', '6', '4', 9, 0,
  /* 10 */ 'x', 's', 'a', 'v', 'e', '6', '4', 9, 0,
  /* 19 */ 'x', 'r', 's', 't', 'o', 'r', '6', '4', 9, 0,
  /* 29 */ 'x', 's', 'a', 'v', 'e', 's', '6', '4', 9, 0,
  /* 39 */ 'x', 'r', 's', 't', 'o', 'r', 's', '6', '4', 9, 0,
  /* 50 */ 'x', 's', 'a', 'v', 'e', 'o', 'p', 't', '6', '4', 9, 0,
  /* 62 */ 'j', 'a', 9, 0,
  /* 66 */ 's', 'e', 't', 'a', 9, 0,
  /* 72 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', '1', '6', 'b', 9, 0,
  /* 84 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', '8', 'b', 9, 0,
  /* 95 */ 's', 'b', 'b', 'b', 9, 0,
  /* 101 */ 's', 'u', 'b', 'b', 9, 0,
  /* 107 */ 'a', 'd', 'c', 'b', 9, 0,
  /* 113 */ 'd', 'e', 'c', 'b', 9, 0,
  /* 119 */ 'i', 'n', 'c', 'b', 9, 0,
  /* 125 */ 'x', 'a', 'd', 'd', 'b', 9, 0,
  /* 132 */ 'a', 'n', 'd', 'b', 9, 0,
  /* 138 */ 'n', 'e', 'g', 'b', 9, 0,
  /* 144 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'b', 9, 0,
  /* 154 */ 'j', 'b', 9, 0,
  /* 158 */ 's', 'a', 'l', 'b', 9, 0,
  /* 164 */ 'r', 'c', 'l', 'b', 9, 0,
  /* 170 */ 's', 'h', 'l', 'b', 9, 0,
  /* 176 */ 'r', 'o', 'l', 'b', 9, 0,
  /* 182 */ 'i', 'm', 'u', 'l', 'b', 9, 0,
  /* 189 */ 'i', 'n', 'b', 9, 0,
  /* 194 */ 'c', 'm', 'p', 'b', 9, 0,
  /* 200 */ 's', 'a', 'r', 'b', 9, 0,
  /* 206 */ 'r', 'c', 'r', 'b', 9, 0,
  /* 212 */ 's', 'h', 'r', 'b', 9, 0,
  /* 218 */ 'r', 'o', 'r', 'b', 9, 0,
  /* 224 */ 'x', 'o', 'r', 'b', 9, 0,
  /* 230 */ 's', 'c', 'a', 's', 'b', 9, 0,
  /* 237 */ 'm', 'o', 'v', 'a', 'b', 's', 'b', 9, 0,
  /* 246 */ 'l', 'o', 'd', 's', 'b', 9, 0,
  /* 253 */ 'c', 'm', 'p', 's', 'b', 9, 0,
  /* 260 */ 'o', 'u', 't', 's', 'b', 9, 0,
  /* 267 */ 'm', 'o', 'v', 's', 'b', 9, 0,
  /* 274 */ 's', 'e', 't', 'b', 9, 0,
  /* 280 */ 'n', 'o', 't', 'b', 9, 0,
  /* 286 */ 't', 'e', 's', 't', 'b', 9, 0,
  /* 293 */ 'i', 'd', 'i', 'v', 'b', 9, 0,
  /* 300 */ 'm', 'o', 'v', 'b', 9, 0,
  /* 306 */ 'x', 's', 'a', 'v', 'e', 'c', 9, 0,
  /* 314 */ 'a', 'a', 'd', 9, 0,
  /* 319 */ 'i', 'n', 'v', 'p', 'c', 'i', 'd', 9, 0,
  /* 328 */ 'r', 'd', 'p', 'i', 'd', 9, 0,
  /* 335 */ 'i', 'n', 'v', 'v', 'p', 'i', 'd', 9, 0,
  /* 344 */ 'v', 'm', 'p', 't', 'r', 'l', 'd', 9, 0,
  /* 353 */ 'b', 'o', 'u', 'n', 'd', 9, 0,
  /* 360 */ 'i', 'n', 'c', 's', 's', 'p', 'd', 9, 0,
  /* 369 */ 'r', 'd', 's', 's', 'p', 'd', 9, 0,
  /* 377 */ 'w', 'r', 's', 's', 'd', 9, 0,
  /* 384 */ 'w', 'r', 'u', 's', 's', 'd', 9, 0,
  /* 392 */ 'j', 'a', 'e', 9, 0,
  /* 397 */ 's', 'e', 't', 'a', 'e', 9, 0,
  /* 404 */ 'j', 'b', 'e', 9, 0,
  /* 409 */ 's', 'e', 't', 'b', 'e', 9, 0,
  /* 416 */ 'j', 'g', 'e', 9, 0,
  /* 421 */ 's', 'e', 't', 'g', 'e', 9, 0,
  /* 428 */ 'j', 'e', 9, 0,
  /* 432 */ 'j', 'l', 'e', 9, 0,
  /* 437 */ 's', 'e', 't', 'l', 'e', 9, 0,
  /* 444 */ 'j', 'n', 'e', 9, 0,
  /* 449 */ 'l', 'o', 'o', 'p', 'n', 'e', 9, 0,
  /* 457 */ 's', 'e', 't', 'n', 'e', 9, 0,
  /* 464 */ 'l', 'o', 'o', 'p', 'e', 9, 0,
  /* 471 */ 's', 'e', 't', 'e', 9, 0,
  /* 477 */ 'x', 's', 'a', 'v', 'e', 9, 0,
  /* 484 */ 'j', 'g', 9, 0,
  /* 488 */ 'i', 'n', 'v', 'l', 'p', 'g', 9, 0,
  /* 496 */ 's', 'e', 't', 'g', 9, 0,
  /* 502 */ 'l', 'e', 'a', 'l', 9, 0,
  /* 508 */ 'c', 'm', 'o', 'v', 'a', 'l', 9, 0,
  /* 516 */ 's', 'b', 'b', 'l', 9, 0,
  /* 522 */ 'm', 'o', 'v', 's', 'b', 'l', 9, 0,
  /* 530 */ 's', 'u', 'b', 'l', 9, 0,
  /* 536 */ 'c', 'm', 'o', 'v', 'b', 'l', 9, 0,
  /* 544 */ 'm', 'o', 'v', 'z', 'b', 'l', 9, 0,
  /* 552 */ 'a', 'd', 'c', 'l', 9, 0,
  /* 558 */ 'd', 'e', 'c', 'l', 9, 0,
  /* 564 */ 'i', 'n', 'c', 'l', 9, 0,
  /* 570 */ 'b', 't', 'c', 'l', 9, 0,
  /* 576 */ 'v', 'm', 'r', 'e', 'a', 'd', 'l', 9, 0,
  /* 585 */ 'x', 'a', 'd', 'd', 'l', 9, 0,
  /* 592 */ 'r', 'd', 's', 'e', 'e', 'd', 'l', 9, 0,
  /* 601 */ 's', 'h', 'l', 'd', 'l', 9, 0,
  /* 608 */ 'r', 'd', 'r', 'a', 'n', 'd', 'l', 9, 0,
  /* 617 */ 's', 'h', 'r', 'd', 'l', 9, 0,
  /* 624 */ 'c', 'm', 'o', 'v', 'a', 'e', 'l', 9, 0,
  /* 633 */ 'c', 'm', 'o', 'v', 'b', 'e', 'l', 9, 0,
  /* 642 */ 'c', 'm', 'o', 'v', 'g', 'e', 'l', 9, 0,
  /* 651 */ 'c', 'm', 'o', 'v', 'l', 'e', 'l', 9, 0,
  /* 660 */ 'c', 'm', 'o', 'v', 'n', 'e', 'l', 9, 0,
  /* 669 */ 'r', 'd', 'f', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 680 */ 'w', 'r', 'f', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 691 */ 'r', 'd', 'g', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 702 */ 'w', 'r', 'g', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 713 */ 'v', 'm', 'w', 'r', 'i', 't', 'e', 'l', 9, 0,
  /* 723 */ 'p', 't', 'w', 'r', 'i', 't', 'e', 'l', 9, 0,
  /* 733 */ 'c', 'm', 'o', 'v', 'e', 'l', 9, 0,
  /* 741 */ 'b', 's', 'f', 'l', 9, 0,
  /* 747 */ 'n', 'e', 'g', 'l', 9, 0,
  /* 753 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'l', 9, 0,
  /* 763 */ 'c', 'm', 'o', 'v', 'g', 'l', 9, 0,
  /* 771 */ 'p', 'u', 's', 'h', 'l', 9, 0,
  /* 778 */ 'j', 'l', 9, 0,
  /* 782 */ 's', 'a', 'l', 'l', 9, 0,
  /* 788 */ 'r', 'c', 'l', 'l', 9, 0,
  /* 794 */ 's', 'h', 'l', 'l', 9, 0,
  /* 800 */ 'l', 'c', 'a', 'l', 'l', 'l', 9, 0,
  /* 808 */ 'r', 'o', 'l', 'l', 9, 0,
  /* 814 */ 'l', 's', 'l', 'l', 9, 0,
  /* 820 */ 'i', 'm', 'u', 'l', 'l', 9, 0,
  /* 827 */ 'c', 'm', 'o', 'v', 'l', 'l', 9, 0,
  /* 835 */ 'a', 'n', 'd', 'n', 'l', 9, 0,
  /* 842 */ 'i', 'n', 'l', 9, 0,
  /* 847 */ 'c', 'm', 'o', 'v', 'n', 'o', 'l', 9, 0,
  /* 856 */ 'c', 'm', 'o', 'v', 'o', 'l', 9, 0,
  /* 864 */ 'b', 's', 'w', 'a', 'p', 'l', 9, 0,
  /* 872 */ 'c', 'm', 'p', 'l', 9, 0,
  /* 878 */ 'l', 'j', 'm', 'p', 'l', 9, 0,
  /* 885 */ 'c', 'm', 'o', 'v', 'n', 'p', 'l', 9, 0,
  /* 894 */ 'n', 'o', 'p', 'l', 9, 0,
  /* 900 */ 'p', 'o', 'p', 'l', 9, 0,
  /* 906 */ 'a', 'r', 'p', 'l', 9, 0,
  /* 912 */ 'c', 'm', 'o', 'v', 'p', 'l', 9, 0,
  /* 920 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 926 */ 's', 'a', 'r', 'l', 9, 0,
  /* 932 */ 'r', 'c', 'r', 'l', 9, 0,
  /* 938 */ 's', 'h', 'r', 'l', 9, 0,
  /* 944 */ 'r', 'o', 'r', 'l', 9, 0,
  /* 950 */ 'x', 'o', 'r', 'l', 9, 0,
  /* 956 */ 'b', 's', 'r', 'l', 9, 0,
  /* 962 */ 'b', 't', 'r', 'l', 9, 0,
  /* 968 */ 's', 't', 'r', 'l', 9, 0,
  /* 974 */ 's', 'c', 'a', 's', 'l', 9, 0,
  /* 981 */ 'm', 'o', 'v', 'a', 'b', 's', 'l', 9, 0,
  /* 990 */ 'l', 'd', 's', 'l', 9, 0,
  /* 996 */ 'l', 'o', 'd', 's', 'l', 9, 0,
  /* 1003 */ 'l', 'e', 's', 'l', 9, 0,
  /* 1009 */ 'l', 'f', 's', 'l', 9, 0,
  /* 1015 */ 'l', 'g', 's', 'l', 9, 0,
  /* 1021 */ 'c', 'm', 'o', 'v', 'n', 's', 'l', 9, 0,
  /* 1030 */ 'c', 'm', 'p', 's', 'l', 9, 0,
  /* 1037 */ 'l', 's', 's', 'l', 9, 0,
  /* 1043 */ 'b', 't', 's', 'l', 9, 0,
  /* 1049 */ 'o', 'u', 't', 's', 'l', 9, 0,
  /* 1056 */ 'c', 'm', 'o', 'v', 's', 'l', 9, 0,
  /* 1064 */ 'b', 't', 'l', 9, 0,
  /* 1069 */ 'l', 'g', 'd', 't', 'l', 9, 0,
  /* 1076 */ 's', 'g', 'd', 't', 'l', 9, 0,
  /* 1083 */ 'l', 'i', 'd', 't', 'l', 9, 0,
  /* 1090 */ 's', 'i', 'd', 't', 'l', 9, 0,
  /* 1097 */ 's', 'l', 'd', 't', 'l', 9, 0,
  /* 1104 */ 'l', 'r', 'e', 't', 'l', 9, 0,
  /* 1111 */ 's', 'e', 't', 'l', 9, 0,
  /* 1117 */ 'n', 'o', 't', 'l', 9, 0,
  /* 1123 */ 't', 'e', 's', 't', 'l', 9, 0,
  /* 1130 */ 'i', 'd', 'i', 'v', 'l', 9, 0,
  /* 1137 */ 'm', 'o', 'v', 'l', 9, 0,
  /* 1143 */ 's', 'm', 's', 'w', 'l', 9, 0,
  /* 1150 */ 'm', 'o', 'v', 's', 'w', 'l', 9, 0,
  /* 1158 */ 'm', 'o', 'v', 'z', 'w', 'l', 9, 0,
  /* 1166 */ 'a', 'd', 'c', 'x', 'l', 9, 0,
  /* 1173 */ 's', 'h', 'l', 'x', 'l', 9, 0,
  /* 1180 */ 'm', 'u', 'l', 'x', 'l', 9, 0,
  /* 1187 */ 'a', 'd', 'o', 'x', 'l', 9, 0,
  /* 1194 */ 's', 'a', 'r', 'x', 'l', 9, 0,
  /* 1201 */ 's', 'h', 'r', 'x', 'l', 9, 0,
  /* 1208 */ 'r', 'o', 'r', 'x', 'l', 9, 0,
  /* 1215 */ 'a', 'a', 'm', 9, 0,
  /* 1220 */ 'v', 'm', 'x', 'o', 'n', 9, 0,
  /* 1227 */ 'j', 'o', 9, 0,
  /* 1231 */ 'j', 'n', 'o', 9, 0,
  /* 1236 */ 's', 'e', 't', 'n', 'o', 9, 0,
  /* 1243 */ 's', 'e', 't', 'o', 9, 0,
  /* 1249 */ 'j', 'p', 9, 0,
  /* 1253 */ 'j', 'm', 'p', 9, 0,
  /* 1258 */ 'j', 'n', 'p', 9, 0,
  /* 1263 */ 's', 'e', 't', 'n', 'p', 9, 0,
  /* 1270 */ 'n', 'o', 'p', 9, 0,
  /* 1275 */ 'l', 'o', 'o', 'p', 9, 0,
  /* 1281 */ 'r', 's', 't', 'o', 'r', 's', 's', 'p', 9, 0,
  /* 1291 */ 's', 'e', 't', 'p', 9, 0,
  /* 1297 */ 'l', 'e', 'a', 'q', 9, 0,
  /* 1303 */ 'c', 'm', 'o', 'v', 'a', 'q', 9, 0,
  /* 1311 */ 's', 'b', 'b', 'q', 9, 0,
  /* 1317 */ 'm', 'o', 'v', 's', 'b', 'q', 9, 0,
  /* 1325 */ 's', 'u', 'b', 'q', 9, 0,
  /* 1331 */ 'c', 'm', 'o', 'v', 'b', 'q', 9, 0,
  /* 1339 */ 'm', 'o', 'v', 'z', 'b', 'q', 9, 0,
  /* 1347 */ 'a', 'd', 'c', 'q', 9, 0,
  /* 1353 */ 'd', 'e', 'c', 'q', 9, 0,
  /* 1359 */ 'i', 'n', 'c', 'q', 9, 0,
  /* 1365 */ 'b', 't', 'c', 'q', 9, 0,
  /* 1371 */ 'v', 'm', 'r', 'e', 'a', 'd', 'q', 9, 0,
  /* 1380 */ 'x', 'a', 'd', 'd', 'q', 9, 0,
  /* 1387 */ 'r', 'd', 's', 'e', 'e', 'd', 'q', 9, 0,
  /* 1396 */ 's', 'h', 'l', 'd', 'q', 9, 0,
  /* 1403 */ 'r', 'd', 'r', 'a', 'n', 'd', 'q', 9, 0,
  /* 1412 */ 's', 'h', 'r', 'd', 'q', 9, 0,
  /* 1419 */ 'c', 'm', 'o', 'v', 'a', 'e', 'q', 9, 0,
  /* 1428 */ 'c', 'm', 'o', 'v', 'b', 'e', 'q', 9, 0,
  /* 1437 */ 'c', 'm', 'o', 'v', 'g', 'e', 'q', 9, 0,
  /* 1446 */ 'c', 'm', 'o', 'v', 'l', 'e', 'q', 9, 0,
  /* 1455 */ 'c', 'm', 'o', 'v', 'n', 'e', 'q', 9, 0,
  /* 1464 */ 'r', 'd', 'f', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1475 */ 'w', 'r', 'f', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1486 */ 'r', 'd', 'g', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1497 */ 'w', 'r', 'g', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1508 */ 'v', 'm', 'w', 'r', 'i', 't', 'e', 'q', 9, 0,
  /* 1518 */ 'p', 't', 'w', 'r', 'i', 't', 'e', 'q', 9, 0,
  /* 1528 */ 'c', 'm', 'o', 'v', 'e', 'q', 9, 0,
  /* 1536 */ 'b', 's', 'f', 'q', 9, 0,
  /* 1542 */ 'n', 'e', 'g', 'q', 9, 0,
  /* 1548 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'q', 9, 0,
  /* 1558 */ 'c', 'm', 'o', 'v', 'g', 'q', 9, 0,
  /* 1566 */ 'p', 'u', 's', 'h', 'q', 9, 0,
  /* 1573 */ 's', 'a', 'l', 'q', 9, 0,
  /* 1579 */ 'r', 'c', 'l', 'q', 9, 0,
  /* 1585 */ 's', 'h', 'l', 'q', 9, 0,
  /* 1591 */ 'c', 'a', 'l', 'l', 'q', 9, 0,
  /* 1598 */ 'r', 'o', 'l', 'q', 9, 0,
  /* 1604 */ 'l', 's', 'l', 'q', 9, 0,
  /* 1610 */ 'm', 'o', 'v', 's', 'l', 'q', 9, 0,
  /* 1618 */ 'i', 'm', 'u', 'l', 'q', 9, 0,
  /* 1625 */ 'c', 'm', 'o', 'v', 'l', 'q', 9, 0,
  /* 1633 */ 'a', 'n', 'd', 'n', 'q', 9, 0,
  /* 1640 */ 'c', 'm', 'o', 'v', 'n', 'o', 'q', 9, 0,
  /* 1649 */ 'c', 'm', 'o', 'v', 'o', 'q', 9, 0,
  /* 1657 */ 'b', 's', 'w', 'a', 'p', 'q', 9, 0,
  /* 1665 */ 'c', 'm', 'p', 'q', 9, 0,
  /* 1671 */ 'c', 'm', 'o', 'v', 'n', 'p', 'q', 9, 0,
  /* 1680 */ 'n', 'o', 'p', 'q', 9, 0,
  /* 1686 */ 'p', 'o', 'p', 'q', 9, 0,
  /* 1692 */ 'i', 'n', 'c', 's', 's', 'p', 'q', 9, 0,
  /* 1701 */ 'r', 'd', 's', 's', 'p', 'q', 9, 0,
  /* 1709 */ 'c', 'm', 'o', 'v', 'p', 'q', 9, 0,
  /* 1717 */ 'l', 'a', 'r', 'q', 9, 0,
  /* 1723 */ 's', 'a', 'r', 'q', 9, 0,
  /* 1729 */ 'r', 'c', 'r', 'q', 9, 0,
  /* 1735 */ 's', 'h', 'r', 'q', 9, 0,
  /* 1741 */ 'r', 'o', 'r', 'q', 9, 0,
  /* 1747 */ 'x', 'o', 'r', 'q', 9, 0,
  /* 1753 */ 'b', 's', 'r', 'q', 9, 0,
  /* 1759 */ 'b', 't', 'r', 'q', 9, 0,
  /* 1765 */ 's', 't', 'r', 'q', 9, 0,
  /* 1771 */ 's', 'c', 'a', 's', 'q', 9, 0,
  /* 1778 */ 'm', 'o', 'v', 'a', 'b', 's', 'q', 9, 0,
  /* 1787 */ 'l', 'o', 'd', 's', 'q', 9, 0,
  /* 1794 */ 'l', 'f', 's', 'q', 9, 0,
  /* 1800 */ 'c', 'm', 'o', 'v', 'n', 's', 'q', 9, 0,
  /* 1809 */ 'c', 'm', 'p', 's', 'q', 9, 0,
  /* 1816 */ 'l', 's', 's', 'q', 9, 0,
  /* 1822 */ 'w', 'r', 's', 's', 'q', 9, 0,
  /* 1829 */ 'w', 'r', 'u', 's', 's', 'q', 9, 0,
  /* 1837 */ 'b', 't', 's', 'q', 9, 0,
  /* 1843 */ 'c', 'm', 'o', 'v', 's', 'q', 9, 0,
  /* 1851 */ 'b', 't', 'q', 9, 0,
  /* 1856 */ 'l', 'g', 'd', 't', 'q', 9, 0,
  /* 1863 */ 's', 'g', 'd', 't', 'q', 9, 0,
  /* 1870 */ 'l', 'i', 'd', 't', 'q', 9, 0,
  /* 1877 */ 's', 'i', 'd', 't', 'q', 9, 0,
  /* 1884 */ 's', 'l', 'd', 't', 'q', 9, 0,
  /* 1891 */ 'l', 'r', 'e', 't', 'q', 9, 0,
  /* 1898 */ 'n', 'o', 't', 'q', 9, 0,
  /* 1904 */ 't', 'e', 's', 't', 'q', 9, 0,
  /* 1911 */ 'i', 'd', 'i', 'v', 'q', 9, 0,
  /* 1918 */ 'm', 'o', 'v', 'q', 9, 0,
  /* 1924 */ 's', 'm', 's', 'w', 'q', 9, 0,
  /* 1931 */ 'm', 'o', 'v', 's', 'w', 'q', 9, 0,
  /* 1939 */ 'm', 'o', 'v', 'z', 'w', 'q', 9, 0,
  /* 1947 */ 'a', 'd', 'c', 'x', 'q', 9, 0,
  /* 1954 */ 's', 'h', 'l', 'x', 'q', 9, 0,
  /* 1961 */ 'm', 'u', 'l', 'x', 'q', 9, 0,
  /* 1968 */ 'a', 'd', 'o', 'x', 'q', 9, 0,
  /* 1975 */ 's', 'a', 'r', 'x', 'q', 9, 0,
  /* 1982 */ 's', 'h', 'r', 'x', 'q', 9, 0,
  /* 1989 */ 'r', 'o', 'r', 'x', 'q', 9, 0,
  /* 1996 */ 'v', 'm', 'c', 'l', 'e', 'a', 'r', 9, 0,
  /* 2005 */ 'e', 'n', 't', 'e', 'r', 9, 0,
  /* 2012 */ 'x', 'r', 's', 't', 'o', 'r', 9, 0,
  /* 2020 */ 'v', 'e', 'r', 'r', 9, 0,
  /* 2026 */ 'x', 's', 'a', 'v', 'e', 's', 9, 0,
  /* 2034 */ 'l', 'g', 's', 9, 0,
  /* 2039 */ 'j', 's', 9, 0,
  /* 2043 */ 'j', 'n', 's', 9, 0,
  /* 2048 */ 's', 'e', 't', 'n', 's', 9, 0,
  /* 2055 */ 'x', 'r', 's', 't', 'o', 'r', 's', 9, 0,
  /* 2064 */ 's', 'e', 't', 's', 9, 0,
  /* 2070 */ 'i', 'n', 't', 9, 0,
  /* 2075 */ 'i', 'n', 'v', 'e', 'p', 't', 9, 0,
  /* 2083 */ 'x', 's', 'a', 'v', 'e', 'o', 'p', 't', 9, 0,
  /* 2093 */ 'v', 'm', 'p', 't', 'r', 's', 't', 9, 0,
  /* 2102 */ 'l', 'e', 'a', 'w', 9, 0,
  /* 2108 */ 'c', 'm', 'o', 'v', 'a', 'w', 9, 0,
  /* 2116 */ 's', 'b', 'b', 'w', 9, 0,
  /* 2122 */ 'm', 'o', 'v', 's', 'b', 'w', 9, 0,
  /* 2130 */ 's', 'u', 'b', 'w', 9, 0,
  /* 2136 */ 'c', 'm', 'o', 'v', 'b', 'w', 9, 0,
  /* 2144 */ 'm', 'o', 'v', 'z', 'b', 'w', 9, 0,
  /* 2152 */ 'a', 'd', 'c', 'w', 9, 0,
  /* 2158 */ 'd', 'e', 'c', 'w', 9, 0,
  /* 2164 */ 'i', 'n', 'c', 'w', 9, 0,
  /* 2170 */ 'b', 't', 'c', 'w', 9, 0,
  /* 2176 */ 'x', 'a', 'd', 'd', 'w', 9, 0,
  /* 2183 */ 'r', 'd', 's', 'e', 'e', 'd', 'w', 9, 0,
  /* 2192 */ 's', 'h', 'l', 'd', 'w', 9, 0,
  /* 2199 */ 'r', 'd', 'r', 'a', 'n', 'd', 'w', 9, 0,
  /* 2208 */ 's', 'h', 'r', 'd', 'w', 9, 0,
  /* 2215 */ 'c', 'm', 'o', 'v', 'a', 'e', 'w', 9, 0,
  /* 2224 */ 'c', 'm', 'o', 'v', 'b', 'e', 'w', 9, 0,
  /* 2233 */ 'c', 'm', 'o', 'v', 'g', 'e', 'w', 9, 0,
  /* 2242 */ 'c', 'm', 'o', 'v', 'l', 'e', 'w', 9, 0,
  /* 2251 */ 'c', 'm', 'o', 'v', 'n', 'e', 'w', 9, 0,
  /* 2260 */ 'c', 'm', 'o', 'v', 'e', 'w', 9, 0,
  /* 2268 */ 'b', 's', 'f', 'w', 9, 0,
  /* 2274 */ 'n', 'e', 'g', 'w', 9, 0,
  /* 2280 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'w', 9, 0,
  /* 2290 */ 'c', 'm', 'o', 'v', 'g', 'w', 9, 0,
  /* 2298 */ 'p', 'u', 's', 'h', 'w', 9, 0,
  /* 2305 */ 's', 'a', 'l', 'w', 9, 0,
  /* 2311 */ 'r', 'c', 'l', 'w', 9, 0,
  /* 2317 */ 's', 'h', 'l', 'w', 9, 0,
  /* 2323 */ 'l', 'c', 'a', 'l', 'l', 'w', 9, 0,
  /* 2331 */ 'r', 'o', 'l', 'w', 9, 0,
  /* 2337 */ 'l', 's', 'l', 'w', 9, 0,
  /* 2343 */ 'i', 'm', 'u', 'l', 'w', 9, 0,
  /* 2350 */ 'c', 'm', 'o', 'v', 'l', 'w', 9, 0,
  /* 2358 */ 'i', 'n', 'w', 9, 0,
  /* 2363 */ 'c', 'm', 'o', 'v', 'n', 'o', 'w', 9, 0,
  /* 2372 */ 'c', 'm', 'o', 'v', 'o', 'w', 9, 0,
  /* 2380 */ 'b', 's', 'w', 'a', 'p', 'w', 9, 0,
  /* 2388 */ 'c', 'm', 'p', 'w', 9, 0,
  /* 2394 */ 'l', 'j', 'm', 'p', 'w', 9, 0,
  /* 2401 */ 'c', 'm', 'o', 'v', 'n', 'p', 'w', 9, 0,
  /* 2410 */ 'n', 'o', 'p', 'w', 9, 0,
  /* 2416 */ 'p', 'o', 'p', 'w', 9, 0,
  /* 2422 */ 'c', 'm', 'o', 'v', 'p', 'w', 9, 0,
  /* 2430 */ 'l', 'a', 'r', 'w', 9, 0,
  /* 2436 */ 's', 'a', 'r', 'w', 9, 0,
  /* 2442 */ 'r', 'c', 'r', 'w', 9, 0,
  /* 2448 */ 'v', 'e', 'r', 'w', 9, 0,
  /* 2454 */ 's', 'h', 'r', 'w', 9, 0,
  /* 2460 */ 'r', 'o', 'r', 'w', 9, 0,
  /* 2466 */ 'x', 'o', 'r', 'w', 9, 0,
  /* 2472 */ 'b', 's', 'r', 'w', 9, 0,
  /* 2478 */ 'b', 't', 'r', 'w', 9, 0,
  /* 2484 */ 'l', 't', 'r', 'w', 9, 0,
  /* 2490 */ 's', 't', 'r', 'w', 9, 0,
  /* 2496 */ 's', 'c', 'a', 's', 'w', 9, 0,
  /* 2503 */ 'm', 'o', 'v', 'a', 'b', 's', 'w', 9, 0,
  /* 2512 */ 'l', 'd', 's', 'w', 9, 0,
  /* 2518 */ 'l', 'o', 'd', 's', 'w', 9, 0,
  /* 2525 */ 'l', 'e', 's', 'w', 9, 0,
  /* 2531 */ 'l', 'f', 's', 'w', 9, 0,
  /* 2537 */ 'l', 'g', 's', 'w', 9, 0,
  /* 2543 */ 'c', 'm', 'o', 'v', 'n', 's', 'w', 9, 0,
  /* 2552 */ 'c', 'm', 'p', 's', 'w', 9, 0,
  /* 2559 */ 'l', 's', 's', 'w', 9, 0,
  /* 2565 */ 'b', 't', 's', 'w', 9, 0,
  /* 2571 */ 'o', 'u', 't', 's', 'w', 9, 0,
  /* 2578 */ 'c', 'm', 'o', 'v', 's', 'w', 9, 0,
  /* 2586 */ 'b', 't', 'w', 9, 0,
  /* 2591 */ 'l', 'g', 'd', 't', 'w', 9, 0,
  /* 2598 */ 's', 'g', 'd', 't', 'w', 9, 0,
  /* 2605 */ 'l', 'i', 'd', 't', 'w', 9, 0,
  /* 2612 */ 's', 'i', 'd', 't', 'w', 9, 0,
  /* 2619 */ 'l', 'l', 'd', 't', 'w', 9, 0,
  /* 2626 */ 's', 'l', 'd', 't', 'w', 9, 0,
  /* 2633 */ 'l', 'r', 'e', 't', 'w', 9, 0,
  /* 2640 */ 'n', 'o', 't', 'w', 9, 0,
  /* 2646 */ 't', 'e', 's', 't', 'w', 9, 0,
  /* 2653 */ 'i', 'd', 'i', 'v', 'w', 9, 0,
  /* 2660 */ 'm', 'o', 'v', 'w', 9, 0,
  /* 2666 */ 'l', 'm', 's', 'w', 'w', 9, 0,
  /* 2673 */ 's', 'm', 's', 'w', 'w', 9, 0,
  /* 2680 */ 'm', 'o', 'v', 's', 'w', 'w', 9, 0,
  /* 2688 */ 'm', 'o', 'v', 'z', 'w', 'w', 9, 0,
  /* 2696 */ 'c', 'l', 'r', 's', 's', 'b', 's', 'y', 9, 0,
  /* 2706 */ 'j', 'e', 'c', 'x', 'z', 9, 0,
  /* 2713 */ 'j', 'c', 'x', 'z', 9, 0,
  /* 2719 */ 'j', 'r', 'c', 'x', 'z', 9, 0,
  /* 2726 */ 's', 'a', 'l', 'b', 9, '$', '1', ',', 32, 0,
  /* 2736 */ 'r', 'c', 'l', 'b', 9, '$', '1', ',', 32, 0,
  /* 2746 */ 's', 'h', 'l', 'b', 9, '$', '1', ',', 32, 0,
  /* 2756 */ 'r', 'o', 'l', 'b', 9, '$', '1', ',', 32, 0,
  /* 2766 */ 's', 'a', 'r', 'b', 9, '$', '1', ',', 32, 0,
  /* 2776 */ 'r', 'c', 'r', 'b', 9, '$', '1', ',', 32, 0,
  /* 2786 */ 's', 'h', 'r', 'b', 9, '$', '1', ',', 32, 0,
  /* 2796 */ 'r', 'o', 'r', 'b', 9, '$', '1', ',', 32, 0,
  /* 2806 */ 's', 'a', 'l', 'l', 9, '$', '1', ',', 32, 0,
  /* 2816 */ 'r', 'c', 'l', 'l', 9, '$', '1', ',', 32, 0,
  /* 2826 */ 's', 'h', 'l', 'l', 9, '$', '1', ',', 32, 0,
  /* 2836 */ 'r', 'o', 'l', 'l', 9, '$', '1', ',', 32, 0,
  /* 2846 */ 's', 'a', 'r', 'l', 9, '$', '1', ',', 32, 0,
  /* 2856 */ 'r', 'c', 'r', 'l', 9, '$', '1', ',', 32, 0,
  /* 2866 */ 's', 'h', 'r', 'l', 9, '$', '1', ',', 32, 0,
  /* 2876 */ 'r', 'o', 'r', 'l', 9, '$', '1', ',', 32, 0,
  /* 2886 */ 's', 'a', 'l', 'q', 9, '$', '1', ',', 32, 0,
  /* 2896 */ 'r', 'c', 'l', 'q', 9, '$', '1', ',', 32, 0,
  /* 2906 */ 's', 'h', 'l', 'q', 9, '$', '1', ',', 32, 0,
  /* 2916 */ 'r', 'o', 'l', 'q', 9, '$', '1', ',', 32, 0,
  /* 2926 */ 's', 'a', 'r', 'q', 9, '$', '1', ',', 32, 0,
  /* 2936 */ 'r', 'c', 'r', 'q', 9, '$', '1', ',', 32, 0,
  /* 2946 */ 's', 'h', 'r', 'q', 9, '$', '1', ',', 32, 0,
  /* 2956 */ 'r', 'o', 'r', 'q', 9, '$', '1', ',', 32, 0,
  /* 2966 */ 's', 'a', 'l', 'w', 9, '$', '1', ',', 32, 0,
  /* 2976 */ 'r', 'c', 'l', 'w', 9, '$', '1', ',', 32, 0,
  /* 2986 */ 's', 'h', 'l', 'w', 9, '$', '1', ',', 32, 0,
  /* 2996 */ 'r', 'o', 'l', 'w', 9, '$', '1', ',', 32, 0,
  /* 3006 */ 's', 'a', 'r', 'w', 9, '$', '1', ',', 32, 0,
  /* 3016 */ 'r', 'c', 'r', 'w', 9, '$', '1', ',', 32, 0,
  /* 3026 */ 's', 'h', 'r', 'w', 9, '$', '1', ',', 32, 0,
  /* 3036 */ 'r', 'o', 'r', 'w', 9, '$', '1', ',', 32, 0,
  /* 3046 */ 'm', 'o', 'v', 'a', 'b', 's', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 3060 */ 's', 't', 'o', 's', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 3072 */ 'o', 'u', 't', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 3083 */ 'm', 'o', 'v', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 3094 */ 's', 'a', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3105 */ 'r', 'c', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3116 */ 's', 'h', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3127 */ 'r', 'o', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3138 */ 's', 'a', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3149 */ 'r', 'c', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3160 */ 's', 'h', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3171 */ 'r', 'o', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3182 */ 's', 'h', 'l', 'd', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3194 */ 's', 'h', 'r', 'd', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3206 */ 's', 'a', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3217 */ 'r', 'c', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3228 */ 's', 'h', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3239 */ 'r', 'o', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3250 */ 's', 'a', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3261 */ 'r', 'c', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3272 */ 's', 'h', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3283 */ 'r', 'o', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3294 */ 's', 'h', 'l', 'd', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3306 */ 's', 'h', 'r', 'd', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3318 */ 's', 'a', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3329 */ 'r', 'c', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3340 */ 's', 'h', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3351 */ 'r', 'o', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3362 */ 's', 'a', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3373 */ 'r', 'c', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3384 */ 's', 'h', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3395 */ 'r', 'o', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3406 */ 's', 'h', 'l', 'd', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3418 */ 's', 'h', 'r', 'd', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3430 */ 's', 'a', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3441 */ 'r', 'c', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3452 */ 's', 'h', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3463 */ 'r', 'o', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3474 */ 's', 'a', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3485 */ 'r', 'c', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3496 */ 's', 'h', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3507 */ 'r', 'o', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3518 */ 'x', 'c', 'h', 'g', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3530 */ 'm', 'o', 'v', 'a', 'b', 's', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3544 */ 's', 't', 'o', 's', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3556 */ 'o', 'u', 't', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3567 */ 'm', 'o', 'v', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3578 */ 'x', 'c', 'h', 'g', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3591 */ 'm', 'o', 'v', 'a', 'b', 's', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3606 */ 's', 't', 'o', 's', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3619 */ 'o', 'u', 't', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3631 */ 'm', 'o', 'v', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3643 */ 'x', 'c', 'h', 'g', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3656 */ 'm', 'o', 'v', 'a', 'b', 's', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3671 */ 's', 't', 'o', 's', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3684 */ 'm', 'o', 'v', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3696 */ 'i', 'n', 's', 'b', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3707 */ 'i', 'n', 's', 'l', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3718 */ 'i', 'n', 's', 'w', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3729 */ 'l', 'c', 'a', 'l', 'l', 'l', 9, '*', 0,
  /* 3738 */ 'l', 'j', 'm', 'p', 'l', 9, '*', 0,
  /* 3746 */ 'l', 'c', 'a', 'l', 'l', 'q', 9, '*', 0,
  /* 3755 */ 'r', 'e', 'x', '6', '4', 32, 'j', 'm', 'p', 'q', 9, '*', 0,
  /* 3768 */ 'l', 'j', 'm', 'p', 'q', 9, '*', 0,
  /* 3776 */ 'l', 'c', 'a', 'l', 'l', 'w', 9, '*', 0,
  /* 3785 */ 'l', 'j', 'm', 'p', 'w', 9, '*', 0,
  /* 3793 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 3824 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 3848 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 3873 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 3896 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 3919 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 3941 */ 'u', 'd', '0', 0,
  /* 3945 */ 'x', 's', 'h', 'a', '1', 0,
  /* 3951 */ 'u', 'd', '1', 0,
  /* 3955 */ 'i', 'n', 't', '1', 0,
  /* 3960 */ 'e', 'n', 'd', 'b', 'r', '3', '2', 0,
  /* 3968 */ 'u', 'd', '2', 0,
  /* 3972 */ 'i', 'n', 't', '3', 0,
  /* 3977 */ 'e', 'n', 'd', 'b', 'r', '6', '4', 0,
  /* 3985 */ 'r', 'e', 'x', '6', '4', 0,
  /* 3991 */ 'd', 'a', 't', 'a', '1', '6', 0,
  /* 3998 */ 'x', 's', 'h', 'a', '2', '5', '6', 0,
  /* 4006 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4019 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4026 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4036 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4046 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 4061 */ 'a', 'a', 'a', 0,
  /* 4065 */ 'd', 'a', 'a', 0,
  /* 4069 */ 'x', 'c', 'r', 'y', 'p', 't', 'e', 'c', 'b', 0,
  /* 4079 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 'f', 'b', 0,
  /* 4089 */ 'x', 'c', 'r', 'y', 'p', 't', 'o', 'f', 'b', 0,
  /* 4099 */ 'x', 'l', 'a', 't', 'b', 0,
  /* 4105 */ 'c', 'l', 'a', 'c', 0,
  /* 4110 */ 's', 't', 'a', 'c', 0,
  /* 4115 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 'b', 'c', 0,
  /* 4125 */ 'g', 'e', 't', 's', 'e', 'c', 0,
  /* 4132 */ 's', 'a', 'l', 'c', 0,
  /* 4137 */ 'c', 'l', 'c', 0,
  /* 4141 */ 'c', 'm', 'c', 0,
  /* 4145 */ 'r', 'd', 'p', 'm', 'c', 0,
  /* 4151 */ 'v', 'm', 'f', 'u', 'n', 'c', 0,
  /* 4158 */ 'r', 'd', 't', 's', 'c', 0,
  /* 4164 */ 's', 't', 'c', 0,
  /* 4168 */ 'c', 'p', 'u', 'i', 'd', 0,
  /* 4174 */ 'c', 'l', 'd', 0,
  /* 4178 */ 'c', 'l', 't', 'd', 0,
  /* 4183 */ 's', 't', 'd', 0,
  /* 4187 */ 'c', 'w', 't', 'd', 0,
  /* 4192 */ 'w', 'b', 'i', 'n', 'v', 'd', 0,
  /* 4199 */ 'w', 'b', 'n', 'o', 'i', 'n', 'v', 'd', 0,
  /* 4208 */ 'v', 'm', 'r', 'e', 's', 'u', 'm', 'e', 0,
  /* 4217 */ 'r', 'e', 'p', 'n', 'e', 0,
  /* 4223 */ 'x', 's', 't', 'o', 'r', 'e', 0,
  /* 4230 */ 'l', 'e', 'a', 'v', 'e', 0,
  /* 4236 */ 'v', 'm', 'x', 'o', 'f', 'f', 0,
  /* 4243 */ 'l', 'a', 'h', 'f', 0,
  /* 4248 */ 's', 'a', 'h', 'f', 0,
  /* 4253 */ 'p', 'c', 'o', 'n', 'f', 'i', 'g', 0,
  /* 4261 */ 'v', 'm', 'l', 'a', 'u', 'n', 'c', 'h', 0,
  /* 4270 */ 'c', 'l', 'g', 'i', 0,
  /* 4275 */ 's', 't', 'g', 'i', 0,
  /* 4280 */ 'c', 'l', 'i', 0,
  /* 4284 */ 's', 't', 'i', 0,
  /* 4288 */ 'l', 'o', 'c', 'k', 0,
  /* 4293 */ 'i', 'n', 'b', 9, '%', 'd', 'x', ',', 32, '%', 'a', 'l', 0,
  /* 4306 */ 'p', 'u', 's', 'h', 'a', 'l', 0,
  /* 4313 */ 'p', 'o', 'p', 'a', 'l', 0,
  /* 4319 */ 'p', 'u', 's', 'h', 'f', 'l', 0,
  /* 4326 */ 'p', 'o', 'p', 'f', 'l', 0,
  /* 4332 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 4346 */ 'v', 'm', 'm', 'c', 'a', 'l', 'l', 0,
  /* 4354 */ 'v', 'm', 'c', 'a', 'l', 'l', 0,
  /* 4361 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 0,
  /* 4369 */ 'i', 'r', 'e', 't', 'l', 0,
  /* 4375 */ 'l', 'r', 'e', 't', 'l', 0,
  /* 4381 */ 's', 'y', 's', 'r', 'e', 't', 'l', 0,
  /* 4389 */ 's', 'y', 's', 'e', 'x', 'i', 't', 'l', 0,
  /* 4398 */ 'c', 'w', 't', 'l', 0,
  /* 4403 */ 'm', 'o', 'n', 't', 'm', 'u', 'l', 0,
  /* 4411 */ 'f', 's', 'e', 't', 'p', 'm', 0,
  /* 4418 */ 'r', 's', 'm', 0,
  /* 4422 */ 'i', 'n', 't', 'o', 0,
  /* 4427 */ 'c', 'q', 't', 'o', 0,
  /* 4432 */ 'r', 'd', 't', 's', 'c', 'p', 0,
  /* 4439 */ 'r', 'e', 'p', 0,
  /* 4443 */ 'n', 'o', 'p', 0,
  /* 4447 */ 's', 'a', 'v', 'e', 'p', 'r', 'e', 'v', 's', 's', 'p', 0,
  /* 4459 */ 'p', 'u', 's', 'h', 'f', 'q', 0,
  /* 4466 */ 'p', 'o', 'p', 'f', 'q', 0,
  /* 4472 */ 'i', 'r', 'e', 't', 'q', 0,
  /* 4478 */ 'l', 'r', 'e', 't', 'q', 0,
  /* 4484 */ 's', 'y', 's', 'r', 'e', 't', 'q', 0,
  /* 4492 */ 's', 'y', 's', 'e', 'x', 'i', 't', 'q', 0,
  /* 4501 */ 'c', 'l', 't', 'q', 0,
  /* 4506 */ 's', 'y', 's', 'e', 'n', 't', 'e', 'r', 0,
  /* 4515 */ 'r', 'd', 'm', 's', 'r', 0,
  /* 4521 */ 'w', 'r', 'm', 's', 'r', 0,
  /* 4527 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 't', 'r', 0,
  /* 4537 */ 'a', 'a', 's', 0,
  /* 4541 */ 'd', 'a', 's', 0,
  /* 4545 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'c', 's', 0,
  /* 4555 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'c', 's', 0,
  /* 4565 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'd', 's', 0,
  /* 4575 */ 'p', 'o', 'p', 'l', 9, '%', 'd', 's', 0,
  /* 4584 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'd', 's', 0,
  /* 4594 */ 'p', 'o', 'p', 'w', 9, '%', 'd', 's', 0,
  /* 4603 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'e', 's', 0,
  /* 4613 */ 'p', 'o', 'p', 'l', 9, '%', 'e', 's', 0,
  /* 4622 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'e', 's', 0,
  /* 4632 */ 'p', 'o', 'p', 'w', 9, '%', 'e', 's', 0,
  /* 4641 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'f', 's', 0,
  /* 4651 */ 'p', 'o', 'p', 'l', 9, '%', 'f', 's', 0,
  /* 4660 */ 'p', 'u', 's', 'h', 'q', 9, '%', 'f', 's', 0,
  /* 4670 */ 'p', 'o', 'p', 'q', 9, '%', 'f', 's', 0,
  /* 4679 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'f', 's', 0,
  /* 4689 */ 'p', 'o', 'p', 'w', 9, '%', 'f', 's', 0,
  /* 4698 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'g', 's', 0,
  /* 4708 */ 'p', 'o', 'p', 'l', 9, '%', 'g', 's', 0,
  /* 4717 */ 'p', 'u', 's', 'h', 'q', 9, '%', 'g', 's', 0,
  /* 4727 */ 'p', 'o', 'p', 'q', 9, '%', 'g', 's', 0,
  /* 4736 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'g', 's', 0,
  /* 4746 */ 'p', 'o', 'p', 'w', 9, '%', 'g', 's', 0,
  /* 4755 */ 's', 'w', 'a', 'p', 'g', 's', 0,
  /* 4762 */ 'p', 'u', 's', 'h', 'l', 9, '%', 's', 's', 0,
  /* 4772 */ 'p', 'o', 'p', 'l', 9, '%', 's', 's', 0,
  /* 4781 */ 'p', 'u', 's', 'h', 'w', 9, '%', 's', 's', 0,
  /* 4791 */ 'p', 'o', 'p', 'w', 9, '%', 's', 's', 0,
  /* 4800 */ 'c', 'l', 't', 's', 0,
  /* 4805 */ 'h', 'l', 't', 0,
  /* 4809 */ 'r', 'd', 'p', 'k', 'r', 'u', 0,
  /* 4816 */ 'w', 'r', 'p', 'k', 'r', 'u', 0,
  /* 4823 */ 'x', 'g', 'e', 't', 'b', 'v', 0,
  /* 4830 */ 'x', 's', 'e', 't', 'b', 'v', 0,
  /* 4837 */ 'p', 'u', 's', 'h', 'a', 'w', 0,
  /* 4844 */ 'p', 'o', 'p', 'a', 'w', 0,
  /* 4850 */ 'p', 'u', 's', 'h', 'f', 'w', 0,
  /* 4857 */ 'p', 'o', 'p', 'f', 'w', 0,
  /* 4863 */ 'c', 'b', 't', 'w', 0,
  /* 4868 */ 'i', 'r', 'e', 't', 'w', 0,
  /* 4874 */ 'l', 'r', 'e', 't', 'w', 0,
  /* 4880 */ 'i', 'n', 'w', 9, '%', 'd', 'x', ',', 32, '%', 'a', 'x', 0,
  /* 4893 */ 'v', 'm', 'l', 'o', 'a', 'd', 9, '%', 'e', 'a', 'x', 0,
  /* 4905 */ 'v', 'm', 's', 'a', 'v', 'e', 9, '%', 'e', 'a', 'x', 0,
  /* 4917 */ 'v', 'm', 'r', 'u', 'n', 9, '%', 'e', 'a', 'x', 0,
  /* 4928 */ 's', 'k', 'i', 'n', 'i', 't', 9, '%', 'e', 'a', 'x', 0,
  /* 4940 */ 'i', 'n', 'l', 9, '%', 'd', 'x', ',', 32, '%', 'e', 'a', 'x', 0,
  /* 4954 */ 'v', 'm', 'l', 'o', 'a', 'd', 9, '%', 'r', 'a', 'x', 0,
  /* 4966 */ 'v', 'm', 's', 'a', 'v', 'e', 9, '%', 'r', 'a', 'x', 0,
  /* 4978 */ 'v', 'm', 'r', 'u', 'n', 9, '%', 'r', 'a', 'x', 0,
  /* 4989 */ 'i', 'n', 'v', 'l', 'p', 'g', 'a', 9, '%', 'e', 'a', 'x', ',', 32, '%', 'e', 'c', 'x', 0,
  /* 5008 */ 'i', 'n', 'v', 'l', 'p', 'g', 'a', 9, '%', 'r', 'a', 'x', ',', 32, '%', 'e', 'c', 'x', 0,
  /* 5027 */ 'o', 'u', 't', 'b', 9, '%', 'a', 'l', ',', 32, '%', 'd', 'x', 0,
  /* 5041 */ 'o', 'u', 't', 'w', 9, '%', 'a', 'x', ',', 32, '%', 'd', 'x', 0,
  /* 5055 */ 'o', 'u', 't', 'l', 9, '%', 'e', 'a', 'x', ',', 32, '%', 'd', 'x', 0,
  /* 5070 */ 'm', 'o', 'n', 'i', 't', 'o', 'r', 'x', 0,
  /* 5079 */ 'm', 'w', 'a', 'i', 't', 'x', 0,
  /* 5086 */ 's', 'e', 't', 's', 's', 'b', 's', 'y', 0,
  };
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    4027U,	// DBG_VALUE
    4037U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    4020U,	// BUNDLE
    4047U,	// LIFETIME_START
    4007U,	// LIFETIME_END
    0U,	// STACKMAP
    4333U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    3874U,	// PATCHABLE_FUNCTION_ENTER
    3794U,	// PATCHABLE_RET
    3920U,	// PATCHABLE_FUNCTION_EXIT
    3897U,	// PATCHABLE_TAIL_CALL
    3849U,	// PATCHABLE_EVENT_CALL
    3825U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_BSWAP
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// RETPOLINE_CALL32
    0U,	// RETPOLINE_CALL64
    0U,	// RETPOLINE_TCRETURN32
    0U,	// RETPOLINE_TCRETURN64
    4062U,	// AAA
    8507U,	// AAD8i8
    9408U,	// AAM8i8
    4538U,	// AAS
    534633U,	// ADC16i16
    1067113U,	// ADC16mi
    1067113U,	// ADC16mi8
    1067113U,	// ADC16mr
    1599593U,	// ADC16ri
    1599593U,	// ADC16ri8
    1607785U,	// ADC16rm
    1599593U,	// ADC16rr
    2123881U,	// ADC16rr_REV
    2630185U,	// ADC32i32
    3162665U,	// ADC32mi
    3162665U,	// ADC32mi8
    3162665U,	// ADC32mr
    1597993U,	// ADC32ri
    1597993U,	// ADC32ri8
    1614377U,	// ADC32rm
    1597993U,	// ADC32rr
    2122281U,	// ADC32rr_REV
    3679556U,	// ADC64i32
    4212036U,	// ADC64mi32
    4212036U,	// ADC64mi8
    4212036U,	// ADC64mr
    1598788U,	// ADC64ri32
    1598788U,	// ADC64ri8
    1623364U,	// ADC64rm
    1598788U,	// ADC64rr
    2123076U,	// ADC64rr_REV
    4726892U,	// ADC8i8
    5259372U,	// ADC8mi
    5259372U,	// ADC8mi8
    5259372U,	// ADC8mr
    1597548U,	// ADC8ri
    1597548U,	// ADC8ri8
    57452U,	// ADC8rm
    1597548U,	// ADC8rr
    2121836U,	// ADC8rr_REV
    2139279U,	// ADCX32rm
    2122895U,	// ADCX32rr
    2148252U,	// ADCX64rm
    2123676U,	// ADCX64rr
    534658U,	// ADD16i16
    1067138U,	// ADD16mi
    1067138U,	// ADD16mi8
    1067138U,	// ADD16mr
    1599618U,	// ADD16ri
    1599618U,	// ADD16ri8
    1607810U,	// ADD16rm
    1599618U,	// ADD16rr
    2123906U,	// ADD16rr_REV
    2630219U,	// ADD32i32
    3162699U,	// ADD32mi
    3162699U,	// ADD32mi8
    3162699U,	// ADD32mr
    1598027U,	// ADD32ri
    1598027U,	// ADD32ri8
    1614411U,	// ADD32rm
    1598027U,	// ADD32rr
    2122315U,	// ADD32rr_REV
    3679590U,	// ADD64i32
    4212070U,	// ADD64mi32
    4212070U,	// ADD64mi8
    4212070U,	// ADD64mr
    1598822U,	// ADD64ri32
    1598822U,	// ADD64ri8
    1623398U,	// ADD64rm
    1598822U,	// ADD64rr
    2123110U,	// ADD64rr_REV
    4726911U,	// ADD8i8
    5259391U,	// ADD8mi
    5259391U,	// ADD8mi8
    5259391U,	// ADD8mr
    1597567U,	// ADD8ri
    1597567U,	// ADD8ri8
    57471U,	// ADD8rm
    1597567U,	// ADD8rr
    2121855U,	// ADD8rr_REV
    2139300U,	// ADOX32rm
    2122916U,	// ADOX32rr
    2148273U,	// ADOX64rm
    2123697U,	// ADOX64rr
    534683U,	// AND16i16
    1067163U,	// AND16mi
    1067163U,	// AND16mi8
    1067163U,	// AND16mr
    1599643U,	// AND16ri
    1599643U,	// AND16ri8
    1607835U,	// AND16rm
    1599643U,	// AND16rr
    2123931U,	// AND16rr_REV
    2630244U,	// AND32i32
    3162724U,	// AND32mi
    3162724U,	// AND32mi8
    3162724U,	// AND32mr
    1598052U,	// AND32ri
    1598052U,	// AND32ri8
    1614436U,	// AND32rm
    1598052U,	// AND32rr
    2122340U,	// AND32rr_REV
    3679615U,	// AND64i32
    4212095U,	// AND64mi32
    4212095U,	// AND64mi8
    4212095U,	// AND64mr
    1598847U,	// AND64ri32
    1598847U,	// AND64ri8
    1623423U,	// AND64rm
    1598847U,	// AND64rr
    2123135U,	// AND64rr_REV
    4726917U,	// AND8i8
    5259397U,	// AND8mi
    5259397U,	// AND8mi8
    5259397U,	// AND8mr
    1597573U,	// AND8ri
    1597573U,	// AND8ri8
    57477U,	// AND8rm
    1597573U,	// AND8rr
    2121861U,	// AND8rr_REV
    18391876U,	// ANDN32rm
    18375492U,	// ANDN32rr
    18400866U,	// ANDN64rm
    18376290U,	// ANDN64rr
    1065867U,	// ARPL16mr
    39388043U,	// ARPL16rr
    56107362U,	// BOUNDS16rm
    72884578U,	// BOUNDS32rm
    75997U,	// BSF16rm
    39389405U,	// BSF16rr
    82662U,	// BSF32rm
    39387878U,	// BSF32rr
    91649U,	// BSF64rm
    39388673U,	// BSF64rr
    76201U,	// BSR16rm
    39389609U,	// BSR16rr
    82877U,	// BSR32rm
    39388093U,	// BSR32rr
    91866U,	// BSR64rm
    39388890U,	// BSR64rr
    10573U,	// BSWAP16r_BAD
    9057U,	// BSWAP32r
    9850U,	// BSWAP64r
    1067547U,	// BT16mi8
    1067547U,	// BT16mr
    39389723U,	// BT16ri8
    39389723U,	// BT16rr
    3163177U,	// BT32mi8
    3163177U,	// BT32mr
    39388201U,	// BT32ri8
    39388201U,	// BT32rr
    4212540U,	// BT64mi8
    4212540U,	// BT64mr
    39388988U,	// BT64ri8
    39388988U,	// BT64rr
    1067131U,	// BTC16mi8
    1067131U,	// BTC16mr
    1599611U,	// BTC16ri8
    1599611U,	// BTC16rr
    3162683U,	// BTC32mi8
    3162683U,	// BTC32mr
    1598011U,	// BTC32ri8
    1598011U,	// BTC32rr
    4212054U,	// BTC64mi8
    4212054U,	// BTC64mr
    1598806U,	// BTC64ri8
    1598806U,	// BTC64rr
    1067439U,	// BTR16mi8
    1067439U,	// BTR16mr
    1599919U,	// BTR16ri8
    1599919U,	// BTR16rr
    3163075U,	// BTR32mi8
    3163075U,	// BTR32mr
    1598403U,	// BTR32ri8
    1598403U,	// BTR32rr
    4212448U,	// BTR64mi8
    4212448U,	// BTR64mr
    1599200U,	// BTR64ri8
    1599200U,	// BTR64rr
    1067526U,	// BTS16mi8
    1067526U,	// BTS16mr
    1600006U,	// BTS16ri8
    1600006U,	// BTS16rr
    3163156U,	// BTS32mi8
    3163156U,	// BTS32mr
    1598484U,	// BTS32ri8
    1598484U,	// BTS32rr
    4212526U,	// BTS64mi8
    4212526U,	// BTS64mr
    1599278U,	// BTS64ri8
    1599278U,	// BTS64rr
    102082U,	// CALL16m
    102082U,	// CALL16m_NT
    11970U,	// CALL16r
    11970U,	// CALL16r_NT
    110227U,	// CALL32m
    110227U,	// CALL32m_NT
    11923U,	// CALL32r
    11923U,	// CALL32r_NT
    118436U,	// CALL64m
    118436U,	// CALL64m_NT
    124472U,	// CALL64pcrel32
    11940U,	// CALL64r
    11940U,	// CALL64r_NT
    125205U,	// CALLpcrel16
    123682U,	// CALLpcrel32
    4864U,	// CBW
    4179U,	// CDQ
    4502U,	// CDQE
    4106U,	// CLAC
    4138U,	// CLC
    4175U,	// CLD
    4271U,	// CLGI
    4281U,	// CLI
    109193U,	// CLRSSBSY
    4801U,	// CLTS
    4142U,	// CMC
    2132029U,	// CMOVA16rm
    2123837U,	// CMOVA16rr
    2138621U,	// CMOVA32rm
    2122237U,	// CMOVA32rr
    2147608U,	// CMOVA64rm
    2123032U,	// CMOVA64rr
    2132136U,	// CMOVAE16rm
    2123944U,	// CMOVAE16rr
    2138737U,	// CMOVAE32rm
    2122353U,	// CMOVAE32rr
    2147724U,	// CMOVAE64rm
    2123148U,	// CMOVAE64rr
    2132057U,	// CMOVB16rm
    2123865U,	// CMOVB16rr
    2138649U,	// CMOVB32rm
    2122265U,	// CMOVB32rr
    2147636U,	// CMOVB64rm
    2123060U,	// CMOVB64rr
    2132145U,	// CMOVBE16rm
    2123953U,	// CMOVBE16rr
    2138746U,	// CMOVBE32rm
    2122362U,	// CMOVBE32rr
    2147733U,	// CMOVBE64rm
    2123157U,	// CMOVBE64rr
    2132181U,	// CMOVE16rm
    2123989U,	// CMOVE16rr
    2138846U,	// CMOVE32rm
    2122462U,	// CMOVE32rr
    2147833U,	// CMOVE64rm
    2123257U,	// CMOVE64rr
    2132211U,	// CMOVG16rm
    2124019U,	// CMOVG16rr
    2138876U,	// CMOVG32rm
    2122492U,	// CMOVG32rr
    2147863U,	// CMOVG64rm
    2123287U,	// CMOVG64rr
    2132154U,	// CMOVGE16rm
    2123962U,	// CMOVGE16rr
    2138755U,	// CMOVGE32rm
    2122371U,	// CMOVGE32rr
    2147742U,	// CMOVGE64rm
    2123166U,	// CMOVGE64rr
    2132271U,	// CMOVL16rm
    2124079U,	// CMOVL16rr
    2138940U,	// CMOVL32rm
    2122556U,	// CMOVL32rr
    2147930U,	// CMOVL64rm
    2123354U,	// CMOVL64rr
    2132163U,	// CMOVLE16rm
    2123971U,	// CMOVLE16rr
    2138764U,	// CMOVLE32rm
    2122380U,	// CMOVLE32rr
    2147751U,	// CMOVLE64rm
    2123175U,	// CMOVLE64rr
    2132172U,	// CMOVNE16rm
    2123980U,	// CMOVNE16rr
    2138773U,	// CMOVNE32rm
    2122389U,	// CMOVNE32rr
    2147760U,	// CMOVNE64rm
    2123184U,	// CMOVNE64rr
    2132284U,	// CMOVNO16rm
    2124092U,	// CMOVNO16rr
    2138960U,	// CMOVNO32rm
    2122576U,	// CMOVNO32rr
    2147945U,	// CMOVNO64rm
    2123369U,	// CMOVNO64rr
    2132322U,	// CMOVNP16rm
    2124130U,	// CMOVNP16rr
    2138998U,	// CMOVNP32rm
    2122614U,	// CMOVNP32rr
    2147976U,	// CMOVNP64rm
    2123400U,	// CMOVNP64rr
    2132464U,	// CMOVNS16rm
    2124272U,	// CMOVNS16rr
    2139134U,	// CMOVNS32rm
    2122750U,	// CMOVNS32rr
    2148105U,	// CMOVNS64rm
    2123529U,	// CMOVNS64rr
    2132293U,	// CMOVO16rm
    2124101U,	// CMOVO16rr
    2138969U,	// CMOVO32rm
    2122585U,	// CMOVO32rr
    2147954U,	// CMOVO64rm
    2123378U,	// CMOVO64rr
    2132343U,	// CMOVP16rm
    2124151U,	// CMOVP16rr
    2139025U,	// CMOVP32rm
    2122641U,	// CMOVP32rr
    2148014U,	// CMOVP64rm
    2123438U,	// CMOVP64rr
    2132499U,	// CMOVS16rm
    2124307U,	// CMOVS16rr
    2139169U,	// CMOVS32rm
    2122785U,	// CMOVS32rr
    2148148U,	// CMOVS64rm
    2123572U,	// CMOVS64rr
    534869U,	// CMP16i16
    1067349U,	// CMP16mi
    1067349U,	// CMP16mi8
    1067349U,	// CMP16mr
    39389525U,	// CMP16ri
    39389525U,	// CMP16ri8
    76117U,	// CMP16rm
    39389525U,	// CMP16rr
    39389525U,	// CMP16rr_REV
    2630505U,	// CMP32i32
    3162985U,	// CMP32mi
    3162985U,	// CMP32mi8
    3162985U,	// CMP32mr
    39388009U,	// CMP32ri
    39388009U,	// CMP32ri8
    82793U,	// CMP32rm
    39388009U,	// CMP32rr
    39388009U,	// CMP32rr_REV
    3679874U,	// CMP64i32
    4212354U,	// CMP64mi32
    4212354U,	// CMP64mi8
    4212354U,	// CMP64mr
    39388802U,	// CMP64ri32
    39388802U,	// CMP64ri8
    91778U,	// CMP64rm
    39388802U,	// CMP64rr
    39388802U,	// CMP64rr_REV
    4726979U,	// CMP8i8
    5259459U,	// CMP8mi
    5259459U,	// CMP8mi8
    5259459U,	// CMP8mr
    39387331U,	// CMP8ri
    39387331U,	// CMP8ri8
    131267U,	// CMP8rm
    39387331U,	// CMP8rr
    39387331U,	// CMP8rr_REV
    89792766U,	// CMPSB
    106578951U,	// CMPSL
    123365138U,	// CMPSQ
    140151289U,	// CMPSW
    172105U,	// CMPXCHG16B
    1067241U,	// CMPXCHG16rm
    39389417U,	// CMPXCHG16rr
    3162866U,	// CMPXCHG32rm
    39387890U,	// CMPXCHG32rr
    4212237U,	// CMPXCHG64rm
    39388685U,	// CMPXCHG64rr
    114773U,	// CMPXCHG8B
    5259409U,	// CMPXCHG8rm
    39387281U,	// CMPXCHG8rr
    4169U,	// CPUID
    4428U,	// CQO
    4188U,	// CWD
    4399U,	// CWDE
    4066U,	// DAA
    4542U,	// DAS
    3992U,	// DATA16_PREFIX
    100463U,	// DEC16m
    10351U,	// DEC16r
    10351U,	// DEC16r_alt
    107055U,	// DEC32m
    8751U,	// DEC32r
    8751U,	// DEC32r_alt
    116042U,	// DEC64m
    9546U,	// DEC64r
    180338U,	// DEC8m
    8306U,	// DEC8r
    100959U,	// DIV16m
    10847U,	// DIV16r
    107628U,	// DIV32m
    9324U,	// DIV32r
    116601U,	// DIV64m
    10105U,	// DIV64r
    180519U,	// DIV8m
    8487U,	// DIV8r
    3961U,	// ENDBR32
    3978U,	// ENDBR64
    156772310U,	// ENTER
    39389460U,	// FARCALL16i
    192193U,	// FARCALL16m
    39387937U,	// FARCALL32i
    192146U,	// FARCALL32m
    192163U,	// FARCALL64
    6359387U,	// FARJMP16i
    192202U,	// FARJMP16m
    6357871U,	// FARJMP32i
    192155U,	// FARJMP32m
    192185U,	// FARJMP64
    4412U,	// FSETPM
    4126U,	// GETSEC
    4806U,	// HLT
    100958U,	// IDIV16m
    10846U,	// IDIV16r
    107627U,	// IDIV32m
    9323U,	// IDIV32r
    116600U,	// IDIV64m
    10104U,	// IDIV64r
    180518U,	// IDIV8m
    8486U,	// IDIV8r
    100648U,	// IMUL16m
    10536U,	// IMUL16r
    2132264U,	// IMUL16rm
    7014696U,	// IMUL16rmi
    7014696U,	// IMUL16rmi8
    2124072U,	// IMUL16rr
    18377000U,	// IMUL16rri
    18377000U,	// IMUL16rri8
    107317U,	// IMUL32m
    9013U,	// IMUL32r
    2138933U,	// IMUL32rm
    7537461U,	// IMUL32rmi
    7537461U,	// IMUL32rmi8
    2122549U,	// IMUL32rr
    18375477U,	// IMUL32rri
    18375477U,	// IMUL32rri8
    116307U,	// IMUL64m
    9811U,	// IMUL64r
    2147923U,	// IMUL64rm
    8062547U,	// IMUL64rmi32
    8062547U,	// IMUL64rmi8
    2123347U,	// IMUL64rr
    18376275U,	// IMUL64rri32
    18376275U,	// IMUL64rri8
    180407U,	// IMUL8m
    8375U,	// IMUL8r
    731447U,	// IN16ri
    4881U,	// IN16rr
    2827083U,	// IN32ri
    4941U,	// IN32rr
    4923582U,	// IN8ri
    4294U,	// IN8rr
    100469U,	// INC16m
    10357U,	// INC16r
    10357U,	// INC16r_alt
    107061U,	// INC32m
    8757U,	// INC32r
    8757U,	// INC32r_alt
    116048U,	// INC64m
    9552U,	// INC64r
    180344U,	// INC8m
    8312U,	// INC8r
    8553U,	// INCSSPD
    9885U,	// INCSSPQ
    142961U,	// INSB
    151164U,	// INSL
    167559U,	// INSW
    206871U,	// INT
    3956U,	// INT1
    3973U,	// INT3
    4423U,	// INTO
    4195U,	// INVD
    215068U,	// INVEPT32
    215068U,	// INVEPT64
    180713U,	// INVLPG
    4990U,	// INVLPGA32
    5009U,	// INVLPGA64
    213312U,	// INVPCID32
    213312U,	// INVPCID64
    213328U,	// INVVPID32
    213328U,	// INVVPID64
    0U,	// IRET
    4869U,	// IRET16
    4370U,	// IRET32
    4473U,	// IRET64
    0U,	// Int_eh_sjlj_setup_dispatch
    123273U,	// JAE_1
    123273U,	// JAE_2
    123273U,	// JAE_4
    122943U,	// JA_1
    122943U,	// JA_2
    122943U,	// JA_4
    123285U,	// JBE_1
    123285U,	// JBE_2
    123285U,	// JBE_4
    123035U,	// JB_1
    123035U,	// JB_2
    123035U,	// JB_4
    125594U,	// JCXZ
    125587U,	// JECXZ
    123309U,	// JE_1
    123309U,	// JE_2
    123309U,	// JE_4
    123297U,	// JGE_1
    123297U,	// JGE_2
    123297U,	// JGE_4
    123365U,	// JG_1
    123365U,	// JG_2
    123365U,	// JG_4
    123313U,	// JLE_1
    123313U,	// JLE_2
    123313U,	// JLE_4
    123659U,	// JL_1
    123659U,	// JL_2
    123659U,	// JL_4
    102091U,	// JMP16m
    102091U,	// JMP16m_NT
    11979U,	// JMP16r
    11979U,	// JMP16r_NT
    110236U,	// JMP32m
    110236U,	// JMP32m_NT
    11932U,	// JMP32r
    11932U,	// JMP32r_NT
    118450U,	// JMP64m
    118450U,	// JMP64m_NT
    11954U,	// JMP64r
    11954U,	// JMP64r_NT
    124134U,	// JMP_1
    124134U,	// JMP_2
    124134U,	// JMP_4
    123325U,	// JNE_1
    123325U,	// JNE_2
    123325U,	// JNE_4
    124112U,	// JNO_1
    124112U,	// JNO_2
    124112U,	// JNO_4
    124139U,	// JNP_1
    124139U,	// JNP_2
    124139U,	// JNP_4
    124924U,	// JNS_1
    124924U,	// JNS_2
    124924U,	// JNS_4
    124108U,	// JO_1
    124108U,	// JO_2
    124108U,	// JO_4
    124130U,	// JP_1
    124130U,	// JP_2
    124130U,	// JP_4
    125600U,	// JRCXZ
    124920U,	// JS_1
    124920U,	// JS_2
    124920U,	// JS_4
    4244U,	// LAHF
    76159U,	// LAR16rm
    39389567U,	// LAR16rr
    74649U,	// LAR32rm
    39388057U,	// LAR32rr
    75446U,	// LAR64rm
    39388854U,	// LAR64rr
    223697U,	// LDS16rm
    222175U,	// LDS32rm
    231479U,	// LEA16r
    229879U,	// LEA32r
    229879U,	// LEA64_32r
    230674U,	// LEA64r
    4231U,	// LEAVE
    4231U,	// LEAVE64
    223710U,	// LES16rm
    222188U,	// LES32rm
    223716U,	// LFS16rm
    222194U,	// LFS32rm
    222979U,	// LFS64rm
    191008U,	// LGDT16m
    189486U,	// LGDT32m
    190273U,	// LGDT64m
    223722U,	// LGS16rm
    222200U,	// LGS32rm
    223219U,	// LGS64rm
    191022U,	// LIDT16m
    189500U,	// LIDT32m
    190287U,	// LIDT64m
    100924U,	// LLDT16m
    10812U,	// LLDT16r
    100971U,	// LMSW16m
    10859U,	// LMSW16r
    4289U,	// LOCK_PREFIX
    4956407U,	// LODSB
    2868197U,	// LODSL
    255740U,	// LODSQ
    788951U,	// LODSW
    124156U,	// LOOP
    123345U,	// LOOPE
    123330U,	// LOOPNE
    9297U,	// LRETIL
    10084U,	// LRETIQ
    10826U,	// LRETIW
    4376U,	// LRETL
    4479U,	// LRETQ
    4875U,	// LRETW
    76066U,	// LSL16rm
    39389474U,	// LSL16rr
    74543U,	// LSL32rm
    39387951U,	// LSL32rr
    75333U,	// LSL64rm
    39388741U,	// LSL64rr
    223744U,	// LSS16rm
    222222U,	// LSS32rm
    223001U,	// LSS64rm
    100789U,	// LTRm
    10677U,	// LTRr
    0U,	// MONITORX
    5071U,	// MONITORXrrr
    4404U,	// MONTMUL
    797285U,	// MOV16ao16
    797285U,	// MOV16ao32
    797128U,	// MOV16ao64
    1067621U,	// MOV16mi
    1067621U,	// MOV16mr
    1067621U,	// MOV16ms
    273904U,	// MOV16o16a
    273904U,	// MOV16o32a
    273867U,	// MOV16o64a
    39389797U,	// MOV16ri
    39389797U,	// MOV16ri_alt
    76389U,	// MOV16rm
    39389797U,	// MOV16rr
    39389797U,	// MOV16rr_REV
    39389797U,	// MOV16rs
    76389U,	// MOV16sm
    39389797U,	// MOV16sr
    2901106U,	// MOV32ao16
    2901106U,	// MOV32ao32
    2900950U,	// MOV32ao64
    39388274U,	// MOV32cr
    39388274U,	// MOV32dr
    3163250U,	// MOV32mi
    3163250U,	// MOV32mr
    282160U,	// MOV32o16a
    282160U,	// MOV32o32a
    282120U,	// MOV32o64a
    39388274U,	// MOV32rc
    39388274U,	// MOV32rd
    39388274U,	// MOV32ri
    39388274U,	// MOV32ri_alt
    83058U,	// MOV32rm
    39388274U,	// MOV32rr
    39388274U,	// MOV32rr_REV
    39388274U,	// MOV32rs
    39388274U,	// MOV32sr
    3958655U,	// MOV64ao32
    3958515U,	// MOV64ao64
    39389055U,	// MOV64cr
    39389055U,	// MOV64dr
    4212607U,	// MOV64mi32
    4212607U,	// MOV64mr
    290405U,	// MOV64o32a
    290377U,	// MOV64o64a
    39389055U,	// MOV64rc
    39389055U,	// MOV64rd
    39388915U,	// MOV64ri
    39389055U,	// MOV64ri32
    92031U,	// MOV64rm
    39389055U,	// MOV64rr
    39389055U,	// MOV64rr_REV
    39389055U,	// MOV64rs
    39389055U,	// MOV64sr
    5013805U,	// MOV8ao16
    5013805U,	// MOV8ao32
    5013742U,	// MOV8ao64
    5259565U,	// MOV8mi
    5259565U,	// MOV8mr
    5259565U,	// MOV8mr_NOREX
    297996U,	// MOV8o16a
    297996U,	// MOV8o32a
    297959U,	// MOV8o64a
    39387437U,	// MOV8ri
    39387437U,	// MOV8ri_alt
    131373U,	// MOV8rm
    131373U,	// MOV8rm_NOREX
    39387437U,	// MOV8rr
    39387437U,	// MOV8rr_NOREX
    39387437U,	// MOV8rr_REV
    1067186U,	// MOVBE16mr
    75954U,	// MOVBE16rm
    3162747U,	// MOVBE32mr
    82555U,	// MOVBE32rm
    4212118U,	// MOVBE64mr
    91542U,	// MOVBE64rm
    303372U,	// MOVSB
    312354U,	// MOVSL
    321333U,	// MOVSQ
    330260U,	// MOVSW
    76409U,	// MOVSX16rm16
    133195U,	// MOVSX16rm8
    39389817U,	// MOVSX16rr16
    39389259U,	// MOVSX16rr8
    74879U,	// MOVSX32rm16
    131595U,	// MOVSX32rm8
    131595U,	// MOVSX32rm8_NOREX
    39388287U,	// MOVSX32rr16
    39387659U,	// MOVSX32rr8
    39387659U,	// MOVSX32rr8_NOREX
    75660U,	// MOVSX64rm16
    83531U,	// MOVSX64rm32
    132390U,	// MOVSX64rm8
    39389068U,	// MOVSX64rr16
    39388747U,	// MOVSX64rr32
    39388454U,	// MOVSX64rr8
    76417U,	// MOVZX16rm16
    133217U,	// MOVZX16rm8
    39389825U,	// MOVZX16rr16
    39389281U,	// MOVZX16rr8
    74887U,	// MOVZX32rm16
    131617U,	// MOVZX32rm8
    131617U,	// MOVZX32rm8_NOREX
    39388295U,	// MOVZX32rr16
    39387681U,	// MOVZX32rr8
    39387681U,	// MOVZX32rr8_NOREX
    75668U,	// MOVZX64rm16
    132412U,	// MOVZX64rm8
    39389076U,	// MOVZX64rr16
    39388476U,	// MOVZX64rr8
    100649U,	// MUL16m
    10537U,	// MUL16r
    107318U,	// MUL32m
    9014U,	// MUL32r
    116308U,	// MUL64m
    9812U,	// MUL64r
    180408U,	// MUL8m
    8376U,	// MUL8r
    18392221U,	// MULX32rm
    18375837U,	// MULX32rr
    18401194U,	// MULX64rm
    18376618U,	// MULX64rr
    5080U,	// MWAITXrrr
    100579U,	// NEG16m
    10467U,	// NEG16r
    107244U,	// NEG32m
    8940U,	// NEG32r
    116231U,	// NEG64m
    9735U,	// NEG64r
    180363U,	// NEG8m
    8331U,	// NEG8r
    4444U,	// NOOP
    100715U,	// NOOP18_16m4
    100715U,	// NOOP18_16m5
    100715U,	// NOOP18_16m6
    100715U,	// NOOP18_16m7
    10603U,	// NOOP18_16r4
    10603U,	// NOOP18_16r5
    10603U,	// NOOP18_16r6
    10603U,	// NOOP18_16r7
    107391U,	// NOOP18_m4
    107391U,	// NOOP18_m5
    107391U,	// NOOP18_m6
    107391U,	// NOOP18_m7
    9087U,	// NOOP18_r4
    9087U,	// NOOP18_r5
    9087U,	// NOOP18_r6
    9087U,	// NOOP18_r7
    156771575U,	// NOOP19rr
    107391U,	// NOOPL
    107391U,	// NOOPL_19
    107391U,	// NOOPL_1d
    107391U,	// NOOPL_1e
    9087U,	// NOOPLr
    116369U,	// NOOPQ
    9873U,	// NOOPQr
    100715U,	// NOOPW
    100715U,	// NOOPW_19
    100715U,	// NOOPW_1c
    100715U,	// NOOPW_1d
    100715U,	// NOOPW_1e
    10603U,	// NOOPWr
    100945U,	// NOT16m
    10833U,	// NOT16r
    107614U,	// NOT32m
    9310U,	// NOT32r
    116587U,	// NOT64m
    10091U,	// NOT64r
    180505U,	// NOT8m
    8473U,	// NOT8r
    534942U,	// OR16i16
    1067422U,	// OR16mi
    1067422U,	// OR16mi8
    1067422U,	// OR16mr
    1599902U,	// OR16ri
    1599902U,	// OR16ri8
    1608094U,	// OR16rm
    1599902U,	// OR16rr
    2124190U,	// OR16rr_REV
    2630578U,	// OR32i32
    3163058U,	// OR32mi
    3163058U,	// OR32mi8
    3163058U,	// OR32mr
    1598386U,	// OR32ri
    1598386U,	// OR32ri8
    1614770U,	// OR32rm
    1598386U,	// OR32rr
    2122674U,	// OR32rr_REV
    3679951U,	// OR64i32
    4212431U,	// OR64mi32
    4212431U,	// OR64mi8
    4212431U,	// OR64mr
    1599183U,	// OR64ri32
    1599183U,	// OR64ri8
    1623759U,	// OR64rm
    1599183U,	// OR64rr
    2123471U,	// OR64rr_REV
    4727004U,	// OR8i8
    5259484U,	// OR8mi
    5259484U,	// OR8mi8
    5259484U,	// OR8mr
    1597660U,	// OR8ri
    1597660U,	// OR8ri8
    57564U,	// OR8rm
    1597660U,	// OR8rr
    2121948U,	// OR8rr_REV
    208357U,	// OUT16ir
    5042U,	// OUT16rr
    208420U,	// OUT32ir
    5056U,	// OUT32rr
    207873U,	// OUT8ir
    5028U,	// OUT8rr
    8626437U,	// OUTSB
    8635418U,	// OUTSL
    8653324U,	// OUTSW
    4254U,	// PCONFIG
    10609U,	// POP16r
    100721U,	// POP16rmm
    10609U,	// POP16rmr
    9093U,	// POP32r
    107397U,	// POP32rmm
    9093U,	// POP32rmr
    9879U,	// POP64r
    116375U,	// POP64rmm
    9879U,	// POP64rmr
    4845U,	// POPA16
    4314U,	// POPA32
    4595U,	// POPDS16
    4576U,	// POPDS32
    4633U,	// POPES16
    4614U,	// POPES32
    4858U,	// POPF16
    4327U,	// POPF32
    4467U,	// POPF64
    4690U,	// POPFS16
    4652U,	// POPFS32
    4671U,	// POPFS64
    4747U,	// POPGS16
    4709U,	// POPGS32
    4728U,	// POPGS64
    4792U,	// POPSS16
    4773U,	// POPSS32
    116207U,	// PTWRITE64m
    9711U,	// PTWRITE64r
    107220U,	// PTWRITEm
    8916U,	// PTWRITEr
    10491U,	// PUSH16i8
    10491U,	// PUSH16r
    100603U,	// PUSH16rmm
    10491U,	// PUSH16rmr
    8964U,	// PUSH32i8
    8964U,	// PUSH32r
    107268U,	// PUSH32rmm
    8964U,	// PUSH32rmr
    9759U,	// PUSH64i32
    9759U,	// PUSH64i8
    9759U,	// PUSH64r
    116255U,	// PUSH64rmm
    9759U,	// PUSH64rmr
    4838U,	// PUSHA16
    4307U,	// PUSHA32
    4556U,	// PUSHCS16
    4546U,	// PUSHCS32
    4585U,	// PUSHDS16
    4566U,	// PUSHDS32
    4623U,	// PUSHES16
    4604U,	// PUSHES32
    4851U,	// PUSHF16
    4320U,	// PUSHF32
    4460U,	// PUSHF64
    4680U,	// PUSHFS16
    4642U,	// PUSHFS32
    4661U,	// PUSHFS64
    4737U,	// PUSHGS16
    4699U,	// PUSHGS32
    4718U,	// PUSHGS64
    4782U,	// PUSHSS16
    4763U,	// PUSHSS32
    10491U,	// PUSHi16
    8964U,	// PUSHi32
    100616U,	// RCL16m1
    101746U,	// RCL16mCL
    1386760U,	// RCL16mi
    11169U,	// RCL16r1
    11634U,	// RCL16rCL
    2443528U,	// RCL16ri
    107285U,	// RCL32m1
    109714U,	// RCL32mCL
    3482389U,	// RCL32mi
    11009U,	// RCL32r1
    11410U,	// RCL32rCL
    2442005U,	// RCL32ri
    116268U,	// RCL64m1
    118018U,	// RCL64mCL
    4531756U,	// RCL64mi
    11089U,	// RCL64r1
    11522U,	// RCL64rCL
    2442796U,	// RCL64ri
    180389U,	// RCL8m1
    183330U,	// RCL8mCL
    5578917U,	// RCL8mi
    10929U,	// RCL8r1
    11298U,	// RCL8rCL
    2441381U,	// RCL8ri
    100747U,	// RCR16m1
    101790U,	// RCR16mCL
    1386891U,	// RCR16mi
    11209U,	// RCR16r1
    11678U,	// RCR16rCL
    2443659U,	// RCR16ri
    107429U,	// RCR32m1
    109758U,	// RCR32mCL
    3482533U,	// RCR32mi
    11049U,	// RCR32r1
    11454U,	// RCR32rCL
    2442149U,	// RCR32ri
    116418U,	// RCR64m1
    118062U,	// RCR64mCL
    4531906U,	// RCR64mi
    11129U,	// RCR64r1
    11566U,	// RCR64rCL
    2442946U,	// RCR64ri
    180431U,	// RCR8m1
    183374U,	// RCR8mCL
    5578959U,	// RCR8mi
    10969U,	// RCR8r1
    11342U,	// RCR8rCL
    2441423U,	// RCR8ri
    0U,	// RDFLAGS32
    0U,	// RDFLAGS64
    8862U,	// RDFSBASE
    9657U,	// RDFSBASE64
    8884U,	// RDGSBASE
    9679U,	// RDGSBASE64
    4516U,	// RDMSR
    8521U,	// RDPID32
    8521U,	// RDPID64
    0U,	// RDPKRU
    4810U,	// RDPKRUr
    4146U,	// RDPMC
    10392U,	// RDRAND16r
    8801U,	// RDRAND32r
    9596U,	// RDRAND64r
    10376U,	// RDSEED16r
    8785U,	// RDSEED32r
    9580U,	// RDSEED64r
    8562U,	// RDSSPD
    9894U,	// RDSSPQ
    4159U,	// RDTSC
    4433U,	// RDTSCP
    4218U,	// REPNE_PREFIX
    4440U,	// REP_PREFIX
    0U,	// RET
    9298U,	// RETIL
    10085U,	// RETIQ
    10827U,	// RETIW
    4371U,	// RETL
    4474U,	// RETQ
    4870U,	// RETW
    3986U,	// REX64_PREFIX
    100636U,	// ROL16m1
    101768U,	// ROL16mCL
    1386780U,	// ROL16mi
    11189U,	// ROL16r1
    11656U,	// ROL16rCL
    2443548U,	// ROL16ri
    107305U,	// ROL32m1
    109736U,	// ROL32mCL
    3482409U,	// ROL32mi
    11029U,	// ROL32r1
    11432U,	// ROL32rCL
    2442025U,	// ROL32ri
    116287U,	// ROL64m1
    118040U,	// ROL64mCL
    4531775U,	// ROL64mi
    11109U,	// ROL64r1
    11544U,	// ROL64rCL
    2442815U,	// ROL64ri
    180401U,	// ROL8m1
    183352U,	// ROL8mCL
    5578929U,	// ROL8mi
    10949U,	// ROL8r1
    11320U,	// ROL8rCL
    2441393U,	// ROL8ri
    100765U,	// ROR16m1
    101812U,	// ROR16mCL
    1386909U,	// ROR16mi
    11229U,	// ROR16r1
    11700U,	// ROR16rCL
    2443677U,	// ROR16ri
    107441U,	// ROR32m1
    109780U,	// ROR32mCL
    3482545U,	// ROR32mi
    11069U,	// ROR32r1
    11476U,	// ROR32rCL
    2442161U,	// ROR32ri
    116430U,	// ROR64m1
    118084U,	// ROR64mCL
    4531918U,	// ROR64mi
    11149U,	// ROR64r1
    11588U,	// ROR64rCL
    2442958U,	// ROR64ri
    180443U,	// ROR8m1
    183396U,	// ROR8mCL
    5578971U,	// ROR8mi
    10989U,	// ROR8r1
    11364U,	// ROR8rCL
    2441435U,	// ROR8ri
    7693497U,	// RORX32mi
    18695353U,	// RORX32ri
    8218566U,	// RORX64mi
    18696134U,	// RORX64ri
    4419U,	// RSM
    107778U,	// RSTORSSP
    4249U,	// SAHF
    100610U,	// SAL16m1
    101735U,	// SAL16mCL
    1067266U,	// SAL16mi
    11159U,	// SAL16r1
    11623U,	// SAL16rCL
    2124034U,	// SAL16ri
    107279U,	// SAL32m1
    109703U,	// SAL32mCL
    3162895U,	// SAL32mi
    10999U,	// SAL32r1
    11399U,	// SAL32rCL
    2122511U,	// SAL32ri
    116262U,	// SAL64m1
    118007U,	// SAL64mCL
    4212262U,	// SAL64mi
    11079U,	// SAL64r1
    11511U,	// SAL64rCL
    2123302U,	// SAL64ri
    180383U,	// SAL8m1
    183319U,	// SAL8mCL
    5259423U,	// SAL8mi
    10919U,	// SAL8r1
    11287U,	// SAL8rCL
    2121887U,	// SAL8ri
    4133U,	// SALC
    100741U,	// SAR16m1
    101779U,	// SAR16mCL
    1386885U,	// SAR16mi
    11199U,	// SAR16r1
    11667U,	// SAR16rCL
    2443653U,	// SAR16ri
    107423U,	// SAR32m1
    109747U,	// SAR32mCL
    3482527U,	// SAR32mi
    11039U,	// SAR32r1
    11443U,	// SAR32rCL
    2442143U,	// SAR32ri
    116412U,	// SAR64m1
    118051U,	// SAR64mCL
    4531900U,	// SAR64mi
    11119U,	// SAR64r1
    11555U,	// SAR64rCL
    2442940U,	// SAR64ri
    180425U,	// SAR8m1
    183363U,	// SAR8mCL
    5578953U,	// SAR8mi
    10959U,	// SAR8r1
    11331U,	// SAR8rCL
    2441417U,	// SAR8ri
    7537835U,	// SARX32rm
    18375851U,	// SARX32rr
    8062904U,	// SARX64rm
    18376632U,	// SARX64rr
    4448U,	// SAVEPREVSSP
    534597U,	// SBB16i16
    1067077U,	// SBB16mi
    1067077U,	// SBB16mi8
    1067077U,	// SBB16mr
    1599557U,	// SBB16ri
    1599557U,	// SBB16ri8
    1607749U,	// SBB16rm
    1599557U,	// SBB16rr
    2123845U,	// SBB16rr_REV
    2630149U,	// SBB32i32
    3162629U,	// SBB32mi
    3162629U,	// SBB32mi8
    3162629U,	// SBB32mr
    1597957U,	// SBB32ri
    1597957U,	// SBB32ri8
    1614341U,	// SBB32rm
    1597957U,	// SBB32rr
    2122245U,	// SBB32rr_REV
    3679520U,	// SBB64i32
    4212000U,	// SBB64mi32
    4212000U,	// SBB64mi8
    4212000U,	// SBB64mr
    1598752U,	// SBB64ri32
    1598752U,	// SBB64ri8
    1623328U,	// SBB64rm
    1598752U,	// SBB64rr
    2123040U,	// SBB64rr_REV
    4726880U,	// SBB8i8
    5259360U,	// SBB8mi
    5259360U,	// SBB8mi8
    5259360U,	// SBB8mr
    1597536U,	// SBB8ri
    1597536U,	// SBB8ri8
    57440U,	// SBB8rm
    1597536U,	// SBB8rr
    2121824U,	// SBB8rr_REV
    4858087U,	// SCASB
    2769871U,	// SCASL
    3827436U,	// SCASQ
    690625U,	// SCASW
    180622U,	// SETAEm
    8590U,	// SETAEr
    180291U,	// SETAm
    8259U,	// SETAr
    180634U,	// SETBEm
    8602U,	// SETBEr
    180499U,	// SETBm
    8467U,	// SETBr
    180696U,	// SETEm
    8664U,	// SETEr
    180646U,	// SETGEm
    8614U,	// SETGEr
    180721U,	// SETGm
    8689U,	// SETGr
    180662U,	// SETLEm
    8630U,	// SETLEr
    181336U,	// SETLm
    9304U,	// SETLr
    180682U,	// SETNEm
    8650U,	// SETNEr
    181461U,	// SETNOm
    9429U,	// SETNOr
    181488U,	// SETNPm
    9456U,	// SETNPr
    182273U,	// SETNSm
    10241U,	// SETNSr
    181468U,	// SETOm
    9436U,	// SETOr
    181516U,	// SETPm
    9484U,	// SETPr
    5087U,	// SETSSBSY
    182289U,	// SETSm
    10257U,	// SETSr
    191015U,	// SGDT16m
    189493U,	// SGDT32m
    190280U,	// SGDT64m
    100622U,	// SHL16m1
    101757U,	// SHL16mCL
    1386766U,	// SHL16mi
    11179U,	// SHL16r1
    11645U,	// SHL16rCL
    2443534U,	// SHL16ri
    107291U,	// SHL32m1
    109725U,	// SHL32mCL
    3482395U,	// SHL32mi
    11019U,	// SHL32r1
    11421U,	// SHL32rCL
    2442011U,	// SHL32ri
    116274U,	// SHL64m1
    118029U,	// SHL64mCL
    4531762U,	// SHL64mi
    11099U,	// SHL64r1
    11533U,	// SHL64rCL
    2442802U,	// SHL64ri
    180395U,	// SHL8m1
    183341U,	// SHL8mCL
    5578923U,	// SHL8mi
    10939U,	// SHL8r1
    11309U,	// SHL8rCL
    2441387U,	// SHL8ri
    1068367U,	// SHLD16mrCL
    177039505U,	// SHLD16mri8
    2125135U,	// SHLD16rrCL
    362641U,	// SHLD16rri8
    3165295U,	// SHLD32mrCL
    193815130U,	// SHLD32mri8
    2124911U,	// SHLD32rrCL
    361050U,	// SHLD32rri8
    4213983U,	// SHLD64mrCL
    210593141U,	// SHLD64mri8
    2125023U,	// SHLD64rrCL
    361845U,	// SHLD64rri8
    7537814U,	// SHLX32rm
    18375830U,	// SHLX32rr
    8062883U,	// SHLX64rm
    18376611U,	// SHLX64rr
    100759U,	// SHR16m1
    101801U,	// SHR16mCL
    1386903U,	// SHR16mi
    11219U,	// SHR16r1
    11689U,	// SHR16rCL
    2443671U,	// SHR16ri
    107435U,	// SHR32m1
    109769U,	// SHR32mCL
    3482539U,	// SHR32mi
    11059U,	// SHR32r1
    11465U,	// SHR32rCL
    2442155U,	// SHR32ri
    116424U,	// SHR64m1
    118073U,	// SHR64mCL
    4531912U,	// SHR64mi
    11139U,	// SHR64r1
    11577U,	// SHR64rCL
    2442952U,	// SHR64ri
    180437U,	// SHR8m1
    183385U,	// SHR8mCL
    5578965U,	// SHR8mi
    10979U,	// SHR8r1
    11353U,	// SHR8rCL
    2441429U,	// SHR8ri
    1068379U,	// SHRD16mrCL
    177039521U,	// SHRD16mri8
    2125147U,	// SHRD16rrCL
    362657U,	// SHRD16rri8
    3165307U,	// SHRD32mrCL
    193815146U,	// SHRD32mri8
    2124923U,	// SHRD32rrCL
    361066U,	// SHRD32rri8
    4213995U,	// SHRD64mrCL
    210593157U,	// SHRD64mri8
    2125035U,	// SHRD64rrCL
    361861U,	// SHRD64rri8
    7537842U,	// SHRX32rm
    18375858U,	// SHRX32rr
    8062911U,	// SHRX64rm
    18376639U,	// SHRX64rr
    191029U,	// SIDT16m
    189507U,	// SIDT32m
    190294U,	// SIDT64m
    4929U,	// SKINIT
    100931U,	// SLDT16m
    10819U,	// SLDT16r
    9290U,	// SLDT32r
    10077U,	// SLDT64r
    100978U,	// SMSW16m
    10866U,	// SMSW16r
    9336U,	// SMSW32r
    10117U,	// SMSW64r
    4111U,	// STAC
    4165U,	// STC
    4184U,	// STD
    4276U,	// STGI
    4285U,	// STI
    142325U,	// STOSB
    151063U,	// STOSL
    159320U,	// STOSQ
    167385U,	// STOSW
    10683U,	// STR16r
    9161U,	// STR32r
    9958U,	// STR64r
    100795U,	// STRm
    534611U,	// SUB16i16
    1067091U,	// SUB16mi
    1067091U,	// SUB16mi8
    1067091U,	// SUB16mr
    1599571U,	// SUB16ri
    1599571U,	// SUB16ri8
    1607763U,	// SUB16rm
    1599571U,	// SUB16rr
    2123859U,	// SUB16rr_REV
    2630163U,	// SUB32i32
    3162643U,	// SUB32mi
    3162643U,	// SUB32mi8
    3162643U,	// SUB32mr
    1597971U,	// SUB32ri
    1597971U,	// SUB32ri8
    1614355U,	// SUB32rm
    1597971U,	// SUB32rr
    2122259U,	// SUB32rr_REV
    3679534U,	// SUB64i32
    4212014U,	// SUB64mi32
    4212014U,	// SUB64mi8
    4212014U,	// SUB64mr
    1598766U,	// SUB64ri32
    1598766U,	// SUB64ri8
    1623342U,	// SUB64rm
    1598766U,	// SUB64rr
    2123054U,	// SUB64rr_REV
    4726886U,	// SUB8i8
    5259366U,	// SUB8mi
    5259366U,	// SUB8mi8
    5259366U,	// SUB8mr
    1597542U,	// SUB8ri
    1597542U,	// SUB8ri8
    57446U,	// SUB8rm
    1597542U,	// SUB8rr
    2121830U,	// SUB8rr_REV
    4756U,	// SWAPGS
    4362U,	// SYSCALL
    4507U,	// SYSENTER
    4390U,	// SYSEXIT
    4493U,	// SYSEXIT64
    4382U,	// SYSRET
    4485U,	// SYSRET64
    124134U,	// TAILJMPd
    124134U,	// TAILJMPd64
    0U,	// TAILJMPd64_CC
    0U,	// TAILJMPd_CC
    110236U,	// TAILJMPm
    118450U,	// TAILJMPm64
    118444U,	// TAILJMPm64_REX
    0U,	// TAILJMPr
    11954U,	// TAILJMPr64
    11948U,	// TAILJMPr64_REX
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi64
    0U,	// TCRETURNdi64cc
    0U,	// TCRETURNdicc
    0U,	// TCRETURNmi
    0U,	// TCRETURNmi64
    0U,	// TCRETURNri
    0U,	// TCRETURNri64
    535127U,	// TEST16i16
    1067607U,	// TEST16mi
    1067607U,	// TEST16mr
    39389783U,	// TEST16ri
    39389783U,	// TEST16rr
    2630756U,	// TEST32i32
    3163236U,	// TEST32mi
    3163236U,	// TEST32mr
    39388260U,	// TEST32ri
    39388260U,	// TEST32rr
    3680113U,	// TEST64i32
    4212593U,	// TEST64mi32
    4212593U,	// TEST64mr
    39389041U,	// TEST64ri32
    39389041U,	// TEST64rr
    4727071U,	// TEST8i8
    5259551U,	// TEST8mi
    5259551U,	// TEST8mr
    39387423U,	// TEST8ri
    39387423U,	// TEST8rr
    3942U,	// UD0
    3952U,	// UD1
    3969U,	// UD2
    100325U,	// VERRm
    10213U,	// VERRr
    100753U,	// VERWm
    10641U,	// VERWr
    4355U,	// VMCALL
    116685U,	// VMCLEARm
    4152U,	// VMFUNC
    4262U,	// VMLAUNCH
    4894U,	// VMLOAD32
    4955U,	// VMLOAD64
    4347U,	// VMMCALL
    115033U,	// VMPTRLDm
    116782U,	// VMPTRSTm
    3162689U,	// VMREAD32mr
    39387713U,	// VMREAD32rr
    4212060U,	// VMREAD64mr
    39388508U,	// VMREAD64rr
    4209U,	// VMRESUME
    4918U,	// VMRUN32
    4979U,	// VMRUN64
    4906U,	// VMSAVE32
    4967U,	// VMSAVE64
    82634U,	// VMWRITE32rm
    39387850U,	// VMWRITE32rr
    91621U,	// VMWRITE64rm
    39388645U,	// VMWRITE64rr
    4237U,	// VMXOFF
    115909U,	// VMXON
    4193U,	// WBINVD
    4200U,	// WBNOINVD
    0U,	// WRFLAGS32
    0U,	// WRFLAGS64
    8873U,	// WRFSBASE
    9668U,	// WRFSBASE64
    8895U,	// WRGSBASE
    9690U,	// WRGSBASE64
    4522U,	// WRMSR
    0U,	// WRPKRU
    4817U,	// WRPKRUr
    3162490U,	// WRSSD
    4212511U,	// WRSSQ
    3162497U,	// WRUSSD
    4212518U,	// WRUSSQ
    223938689U,	// XADD16rm
    370817U,	// XADD16rr
    240714314U,	// XADD32rm
    369226U,	// XADD32rr
    257492325U,	// XADD64rm
    370021U,	// XADD64rr
    274268286U,	// XADD8rm
    368766U,	// XADD8rr
    69055U,	// XCHG16ar
    223938796U,	// XCHG16rm
    9464044U,	// XCHG16rr
    69115U,	// XCHG32ar
    240714485U,	// XCHG32rm
    9462517U,	// XCHG32rr
    69180U,	// XCHG64ar
    257492496U,	// XCHG64rm
    9463312U,	// XCHG64rr
    274268308U,	// XCHG8rm
    9461908U,	// XCHG8rr
    4116U,	// XCRYPTCBC
    4080U,	// XCRYPTCFB
    4528U,	// XCRYPTCTR
    4070U,	// XCRYPTECB
    4090U,	// XCRYPTOFB
    4824U,	// XGETBV
    4100U,	// XLAT
    534947U,	// XOR16i16
    1067427U,	// XOR16mi
    1067427U,	// XOR16mi8
    1067427U,	// XOR16mr
    1599907U,	// XOR16ri
    1599907U,	// XOR16ri8
    1608099U,	// XOR16rm
    1599907U,	// XOR16rr
    2124195U,	// XOR16rr_REV
    2630583U,	// XOR32i32
    3163063U,	// XOR32mi
    3163063U,	// XOR32mi8
    3163063U,	// XOR32mr
    1598391U,	// XOR32ri
    1598391U,	// XOR32ri8
    1614775U,	// XOR32rm
    1598391U,	// XOR32rr
    2122679U,	// XOR32rr_REV
    3679956U,	// XOR64i32
    4212436U,	// XOR64mi32
    4212436U,	// XOR64mi8
    4212436U,	// XOR64mr
    1599188U,	// XOR64ri32
    1599188U,	// XOR64ri8
    1623764U,	// XOR64rm
    1599188U,	// XOR64rr
    2123476U,	// XOR64rr_REV
    4727009U,	// XOR8i8
    5259489U,	// XOR8mi
    5259489U,	// XOR8mi8
    5259489U,	// XOR8mr
    1597665U,	// XOR8ri
    1597665U,	// XOR8ri8
    57569U,	// XOR8rm
    1597665U,	// XOR8rr
    2121953U,	// XOR8rr_REV
    190429U,	// XRSTOR
    188436U,	// XRSTOR64
    190472U,	// XRSTORS
    188456U,	// XRSTORS64
    188894U,	// XSAVE
    188427U,	// XSAVE64
    188723U,	// XSAVEC
    188417U,	// XSAVEC64
    190500U,	// XSAVEOPT
    188467U,	// XSAVEOPT64
    190443U,	// XSAVES
    188446U,	// XSAVES64
    4831U,	// XSETBV
    3946U,	// XSHA1
    3999U,	// XSHA256
    4224U,	// XSTORE
  };

  unsigned int opcode = MCInst_getOpcode(MI);
  // printf("opcode = %u\n", opcode);

  // Emit the opcode for the instruction.
  uint32_t Bits = 0;
  Bits |= OpInfo0[opcode] << 0;
  SStream_concat0(O, AsmStrs+(Bits & 8191)-1);


  // Fragment 0 encoded into 6 bits for 46 unique commands.
  // printf("Fragment 0: %"PRIu64"\n", ((Bits >> 13) & 63));
  switch ((Bits >> 13) & 63) {
  default: // unreachable
  case 0:
    // DBG_VALUE, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CAL...
    return;
    break;
  case 1:
    // AAD8i8, AAM8i8, ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i...
    printOperand(MI, 0, O);
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, ADC32rr, A...
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 4:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 5:
    // ADC32rm, ADCX32rm, ADD32rm, ADOX32rm, AND32rm, ANDN32rm, CMOVA32rm, CM...
    printi32mem(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 6:
    // ADC64rm, ADCX64rm, ADD64rm, ADOX64rm, AND64rm, ANDN64rm, CMOVA64rm, CM...
    printi64mem(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 7:
    // ADC8rm, ADD8rm, AND8rm, OR8rm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 8:
    // ARPL16rr, BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri...
    printOperand(MI, 1, O);
    break;
  case 9:
    // BSF16rm, BSR16rm, CMP16rm, LAR16rm, LAR32rm, LAR64rm, LSL16rm, LSL32rm...
    printi16mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 10:
    // BSF32rm, BSR32rm, CMP32rm, MOV32rm, MOVBE32rm, MOVSX64rm32, VMWRITE32r...
    printi32mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 11:
    // BSF64rm, BSR64rm, CMP64rm, MOV64rm, MOVBE64rm, VMWRITE64rm
    printi64mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 12:
    // CALL16m, CALL16m_NT, DEC16m, DIV16m, IDIV16m, IMUL16m, INC16m, JMP16m,...
    printi16mem(MI, 0, O);
    return;
    break;
  case 13:
    // CALL32m, CALL32m_NT, CLRSSBSY, DEC32m, DIV32m, IDIV32m, IMUL32m, INC32...
    printi32mem(MI, 0, O);
    return;
    break;
  case 14:
    // CALL64m, CALL64m_NT, CMPXCHG8B, DEC64m, DIV64m, IDIV64m, IMUL64m, INC6...
    printi64mem(MI, 0, O);
    return;
    break;
  case 15:
    // CALL64pcrel32, CALLpcrel16, CALLpcrel32, JAE_1, JAE_2, JAE_4, JA_1, JA...
    printPCRelImm(MI, 0, O);
    return;
    break;
  case 16:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8, MOVSX32rm8, MOVSX32rm8_NOREX...
    printi8mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 17:
    // CMPSB, INSB, SCASB, STOSB
    printDstIdx8(MI, 0, O);
    break;
  case 18:
    // CMPSL, INSL, SCASL, STOSL
    printDstIdx32(MI, 0, O);
    break;
  case 19:
    // CMPSQ, SCASQ, STOSQ
    printDstIdx64(MI, 0, O);
    break;
  case 20:
    // CMPSW, INSW, SCASW, STOSW
    printDstIdx16(MI, 0, O);
    break;
  case 21:
    // CMPXCHG16B
    printi128mem(MI, 0, O);
    return;
    break;
  case 22:
    // DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, INVLPG, MUL8m, NEG8m, NOT8m, RCL8...
    printi8mem(MI, 0, O);
    return;
    break;
  case 23:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64, LGD...
    printopaquemem(MI, 0, O);
    return;
    break;
  case 24:
    // IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32, IMUL64rmi8,...
    printOperand(MI, 6, O);
    SStream_concat0(O, ", ");
    break;
  case 25:
    // IN16ri, IN32ri, IN8ri, INT, OUT16ir, OUT32ir, OUT8ir
    printU8Imm(MI, 0, O);
    break;
  case 26:
    // INVEPT32, INVEPT64, INVPCID32, INVPCID64, INVVPID32, INVVPID64
    printi128mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 27:
    // LDS16rm, LDS32rm, LES16rm, LES32rm, LFS16rm, LFS32rm, LFS64rm, LGS16rm...
    printopaquemem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 28:
    // LEA16r, LEA32r, LEA64_32r, LEA64r
    printanymem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 29:
    // LODSB, OUTSB
    printSrcIdx8(MI, 0, O);
    break;
  case 30:
    // LODSL, OUTSL
    printSrcIdx32(MI, 0, O);
    break;
  case 31:
    // LODSQ
    printSrcIdx64(MI, 0, O);
    SStream_concat0(O, ", %rax");
    op_addReg(MI, X86_REG_RAX);
    return;
    break;
  case 32:
    // LODSW, OUTSW
    printSrcIdx16(MI, 0, O);
    break;
  case 33:
    // MOV16ao16, MOV16ao32, MOV16ao64, MOV16o16a, MOV16o32a, MOV16o64a
    printMemOffs16(MI, 0, O);
    break;
  case 34:
    // MOV32ao16, MOV32ao32, MOV32ao64, MOV32o16a, MOV32o32a, MOV32o64a
    printMemOffs32(MI, 0, O);
    break;
  case 35:
    // MOV64ao32, MOV64ao64, MOV64o32a, MOV64o64a
    printMemOffs64(MI, 0, O);
    break;
  case 36:
    // MOV8ao16, MOV8ao32, MOV8ao64, MOV8o16a, MOV8o32a, MOV8o64a
    printMemOffs8(MI, 0, O);
    break;
  case 37:
    // MOVSB
    printSrcIdx8(MI, 1, O);
    SStream_concat0(O, ", ");
    printDstIdx8(MI, 0, O);
    return;
    break;
  case 38:
    // MOVSL
    printSrcIdx32(MI, 1, O);
    SStream_concat0(O, ", ");
    printDstIdx32(MI, 0, O);
    return;
    break;
  case 39:
    // MOVSQ
    printSrcIdx64(MI, 1, O);
    SStream_concat0(O, ", ");
    printDstIdx64(MI, 0, O);
    return;
    break;
  case 40:
    // MOVSW
    printSrcIdx16(MI, 1, O);
    SStream_concat0(O, ", ");
    printDstIdx16(MI, 0, O);
    return;
    break;
  case 41:
    // RCL16mi, RCL32mi, RCL64mi, RCL8mi, RCR16mi, RCR32mi, RCR64mi, RCR8mi, ...
    printU8Imm(MI, 5, O);
    SStream_concat0(O, ", ");
    break;
  case 42:
    // RCL16ri, RCL32ri, RCL64ri, RCL8ri, RCR16ri, RCR32ri, RCR64ri, RCR8ri, ...
    printU8Imm(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 43:
    // RORX32mi, RORX64mi, SHLD16mri8, SHLD32mri8, SHLD64mri8, SHRD16mri8, SH...
    printU8Imm(MI, 6, O);
    SStream_concat0(O, ", ");
    break;
  case 44:
    // SHLD16rri8, SHLD32rri8, SHLD64rri8, SHRD16rri8, SHRD32rri8, SHRD64rri8
    printU8Imm(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 45:
    // XADD16rr, XADD32rr, XADD64rr, XADD8rr
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 19 unique commands.
  // printf("Fragment 1: %"PRIu64"\n", ((Bits >> 19) & 31));
  switch ((Bits >> 19) & 31) {
  default: // unreachable
  case 0:
    // AAD8i8, AAM8i8, BSWAP16r_BAD, BSWAP32r, BSWAP64r, CALL16r, CALL16r_NT,...
    return;
    break;
  case 1:
    // ADC16i16, ADD16i16, AND16i16, CMP16i16, IN16ri, LODSW, MOV16ao16, MOV1...
    SStream_concat0(O, ", %ax");
    op_addReg(MI, X86_REG_AX);
    return;
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16...
    printi16mem(MI, 0, O);
    return;
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32ri, ADC32ri8, ADC32rm, ADC32...
    printOperand(MI, 1, O);
    break;
  case 4:
    // ADC16rr_REV, ADC32rr_REV, ADC64rr_REV, ADC8rr_REV, ADCX32rm, ADCX32rr,...
    printOperand(MI, 0, O);
    return;
    break;
  case 5:
    // ADC32i32, ADD32i32, AND32i32, CMP32i32, IN32ri, LODSL, MOV32ao16, MOV3...
    SStream_concat0(O, ", %eax");
    op_addReg(MI, X86_REG_EAX);
    return;
    break;
  case 6:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0, O);
    return;
    break;
  case 7:
    // ADC64i32, ADD64i32, AND64i32, CMP64i32, MOV64ao32, MOV64ao64, OR64i32,...
    SStream_concat0(O, ", %rax");
    op_addReg(MI, X86_REG_RAX);
    return;
    break;
  case 8:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0, O);
    return;
    break;
  case 9:
    // ADC8i8, ADD8i8, AND8i8, CMP8i8, IN8ri, LODSB, MOV8ao16, MOV8ao32, MOV8...
    SStream_concat0(O, ", %al");
    op_addReg(MI, X86_REG_AL);
    return;
    break;
  case 10:
    // ADC8mi, ADC8mi8, ADC8mr, ADD8mi, ADD8mi8, ADD8mr, AND8mi, AND8mi8, AND...
    printi8mem(MI, 0, O);
    return;
    break;
  case 11:
    // ARPL16rr, BOUNDS16rm, BOUNDS32rm, BSF16rr, BSF32rr, BSF64rr, BSR16rr, ...
    SStream_concat0(O, ", ");
    break;
  case 12:
    // FARJMP16i, FARJMP32i
    SStream_concat0(O, ":");
    printOperand(MI, 0, O);
    return;
    break;
  case 13:
    // IMUL16rmi, IMUL16rmi8
    printi16mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 14:
    // IMUL32rmi, IMUL32rmi8, RORX32mi, SARX32rm, SHLX32rm, SHRX32rm
    printi32mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 15:
    // IMUL64rmi32, IMUL64rmi8, RORX64mi, SARX64rm, SHLX64rm, SHRX64rm
    printi64mem(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 16:
    // OUTSB, OUTSL, OUTSW
    SStream_concat0(O, ", %dx");
    op_addReg(MI, X86_REG_DX);
    return;
    break;
  case 17:
    // SHLD16mri8, SHLD32mri8, SHLD64mri8, SHRD16mri8, SHRD32mri8, SHRD64mri8
    printOperand(MI, 5, O);
    SStream_concat0(O, ", ");
    break;
  case 18:
    // XCHG16rr, XCHG32rr, XCHG64rr, XCHG8rr
    printOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 17 unique commands.
  // printf("Fragment 2: %"PRIu64"\n", ((Bits >> 24) & 31));
  switch ((Bits >> 24) & 31) {
  default: // unreachable
  case 0:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32ri, ADC32ri8, ADC32rm, ADC32...
    return;
    break;
  case 1:
    // ANDN32rm, ANDN32rr, ANDN64rm, ANDN64rr, IMUL16rri, IMUL16rri8, IMUL32r...
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 2:
    // ARPL16rr, BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri...
    printOperand(MI, 0, O);
    return;
    break;
  case 3:
    // BOUNDS16rm
    printi32mem(MI, 1, O);
    return;
    break;
  case 4:
    // BOUNDS32rm
    printi64mem(MI, 1, O);
    return;
    break;
  case 5:
    // CMPSB
    printSrcIdx8(MI, 1, O);
    return;
    break;
  case 6:
    // CMPSL
    printSrcIdx32(MI, 1, O);
    return;
    break;
  case 7:
    // CMPSQ
    printSrcIdx64(MI, 1, O);
    return;
    break;
  case 8:
    // CMPSW
    printSrcIdx16(MI, 1, O);
    return;
    break;
  case 9:
    // ENTER, NOOP19rr
    printOperand(MI, 1, O);
    return;
    break;
  case 10:
    // SHLD16mri8, SHRD16mri8
    printi16mem(MI, 0, O);
    return;
    break;
  case 11:
    // SHLD32mri8, SHRD32mri8
    printi32mem(MI, 0, O);
    return;
    break;
  case 12:
    // SHLD64mri8, SHRD64mri8
    printi64mem(MI, 0, O);
    return;
    break;
  case 13:
    // XADD16rm, XCHG16rm
    printi16mem(MI, 2, O);
    return;
    break;
  case 14:
    // XADD32rm, XCHG32rm
    printi32mem(MI, 2, O);
    return;
    break;
  case 15:
    // XADD64rm, XCHG64rm
    printi64mem(MI, 2, O);
    return;
    break;
  case 16:
    // XADD8rm, XCHG8rm
    printi8mem(MI, 2, O);
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo)
{

#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ 's', 't', '(', '0', ')', 0,
  /* 6 */ 's', 't', '(', '1', ')', 0,
  /* 12 */ 's', 't', '(', '2', ')', 0,
  /* 18 */ 's', 't', '(', '3', ')', 0,
  /* 24 */ 's', 't', '(', '4', ')', 0,
  /* 30 */ 's', 't', '(', '5', ')', 0,
  /* 36 */ 's', 't', '(', '6', ')', 0,
  /* 42 */ 's', 't', '(', '7', ')', 0,
  /* 48 */ 'x', 'm', 'm', '1', '0', 0,
  /* 54 */ 'y', 'm', 'm', '1', '0', 0,
  /* 60 */ 'z', 'm', 'm', '1', '0', 0,
  /* 66 */ 'c', 'r', '1', '0', 0,
  /* 71 */ 'd', 'r', '1', '0', 0,
  /* 76 */ 'x', 'm', 'm', '2', '0', 0,
  /* 82 */ 'y', 'm', 'm', '2', '0', 0,
  /* 88 */ 'z', 'm', 'm', '2', '0', 0,
  /* 94 */ 'x', 'm', 'm', '3', '0', 0,
  /* 100 */ 'y', 'm', 'm', '3', '0', 0,
  /* 106 */ 'z', 'm', 'm', '3', '0', 0,
  /* 112 */ 'b', 'n', 'd', '0', 0,
  /* 117 */ 'k', '0', 0,
  /* 120 */ 'x', 'm', 'm', '0', 0,
  /* 125 */ 'y', 'm', 'm', '0', 0,
  /* 130 */ 'z', 'm', 'm', '0', 0,
  /* 135 */ 'f', 'p', '0', 0,
  /* 139 */ 'c', 'r', '0', 0,
  /* 143 */ 'd', 'r', '0', 0,
  /* 147 */ 'x', 'm', 'm', '1', '1', 0,
  /* 153 */ 'y', 'm', 'm', '1', '1', 0,
  /* 159 */ 'z', 'm', 'm', '1', '1', 0,
  /* 165 */ 'c', 'r', '1', '1', 0,
  /* 170 */ 'd', 'r', '1', '1', 0,
  /* 175 */ 'x', 'm', 'm', '2', '1', 0,
  /* 181 */ 'y', 'm', 'm', '2', '1', 0,
  /* 187 */ 'z', 'm', 'm', '2', '1', 0,
  /* 193 */ 'x', 'm', 'm', '3', '1', 0,
  /* 199 */ 'y', 'm', 'm', '3', '1', 0,
  /* 205 */ 'z', 'm', 'm', '3', '1', 0,
  /* 211 */ 'b', 'n', 'd', '1', 0,
  /* 216 */ 'k', '1', 0,
  /* 219 */ 'x', 'm', 'm', '1', 0,
  /* 224 */ 'y', 'm', 'm', '1', 0,
  /* 229 */ 'z', 'm', 'm', '1', 0,
  /* 234 */ 'f', 'p', '1', 0,
  /* 238 */ 'c', 'r', '1', 0,
  /* 242 */ 'd', 'r', '1', 0,
  /* 246 */ 'x', 'm', 'm', '1', '2', 0,
  /* 252 */ 'y', 'm', 'm', '1', '2', 0,
  /* 258 */ 'z', 'm', 'm', '1', '2', 0,
  /* 264 */ 'c', 'r', '1', '2', 0,
  /* 269 */ 'd', 'r', '1', '2', 0,
  /* 274 */ 'x', 'm', 'm', '2', '2', 0,
  /* 280 */ 'y', 'm', 'm', '2', '2', 0,
  /* 286 */ 'z', 'm', 'm', '2', '2', 0,
  /* 292 */ 'b', 'n', 'd', '2', 0,
  /* 297 */ 'k', '2', 0,
  /* 300 */ 'x', 'm', 'm', '2', 0,
  /* 305 */ 'y', 'm', 'm', '2', 0,
  /* 310 */ 'z', 'm', 'm', '2', 0,
  /* 315 */ 'f', 'p', '2', 0,
  /* 319 */ 'c', 'r', '2', 0,
  /* 323 */ 'd', 'r', '2', 0,
  /* 327 */ 'x', 'm', 'm', '1', '3', 0,
  /* 333 */ 'y', 'm', 'm', '1', '3', 0,
  /* 339 */ 'z', 'm', 'm', '1', '3', 0,
  /* 345 */ 'c', 'r', '1', '3', 0,
  /* 350 */ 'd', 'r', '1', '3', 0,
  /* 355 */ 'x', 'm', 'm', '2', '3', 0,
  /* 361 */ 'y', 'm', 'm', '2', '3', 0,
  /* 367 */ 'z', 'm', 'm', '2', '3', 0,
  /* 373 */ 'b', 'n', 'd', '3', 0,
  /* 378 */ 'k', '3', 0,
  /* 381 */ 'x', 'm', 'm', '3', 0,
  /* 386 */ 'y', 'm', 'm', '3', 0,
  /* 391 */ 'z', 'm', 'm', '3', 0,
  /* 396 */ 'f', 'p', '3', 0,
  /* 400 */ 'c', 'r', '3', 0,
  /* 404 */ 'd', 'r', '3', 0,
  /* 408 */ 'x', 'm', 'm', '1', '4', 0,
  /* 414 */ 'y', 'm', 'm', '1', '4', 0,
  /* 420 */ 'z', 'm', 'm', '1', '4', 0,
  /* 426 */ 'c', 'r', '1', '4', 0,
  /* 431 */ 'd', 'r', '1', '4', 0,
  /* 436 */ 'x', 'm', 'm', '2', '4', 0,
  /* 442 */ 'y', 'm', 'm', '2', '4', 0,
  /* 448 */ 'z', 'm', 'm', '2', '4', 0,
  /* 454 */ 'k', '4', 0,
  /* 457 */ 'x', 'm', 'm', '4', 0,
  /* 462 */ 'y', 'm', 'm', '4', 0,
  /* 467 */ 'z', 'm', 'm', '4', 0,
  /* 472 */ 'f', 'p', '4', 0,
  /* 476 */ 'c', 'r', '4', 0,
  /* 480 */ 'd', 'r', '4', 0,
  /* 484 */ 'x', 'm', 'm', '1', '5', 0,
  /* 490 */ 'y', 'm', 'm', '1', '5', 0,
  /* 496 */ 'z', 'm', 'm', '1', '5', 0,
  /* 502 */ 'c', 'r', '1', '5', 0,
  /* 507 */ 'd', 'r', '1', '5', 0,
  /* 512 */ 'x', 'm', 'm', '2', '5', 0,
  /* 518 */ 'y', 'm', 'm', '2', '5', 0,
  /* 524 */ 'z', 'm', 'm', '2', '5', 0,
  /* 530 */ 'k', '5', 0,
  /* 533 */ 'x', 'm', 'm', '5', 0,
  /* 538 */ 'y', 'm', 'm', '5', 0,
  /* 543 */ 'z', 'm', 'm', '5', 0,
  /* 548 */ 'f', 'p', '5', 0,
  /* 552 */ 'c', 'r', '5', 0,
  /* 556 */ 'd', 'r', '5', 0,
  /* 560 */ 'x', 'm', 'm', '1', '6', 0,
  /* 566 */ 'y', 'm', 'm', '1', '6', 0,
  /* 572 */ 'z', 'm', 'm', '1', '6', 0,
  /* 578 */ 'x', 'm', 'm', '2', '6', 0,
  /* 584 */ 'y', 'm', 'm', '2', '6', 0,
  /* 590 */ 'z', 'm', 'm', '2', '6', 0,
  /* 596 */ 'k', '6', 0,
  /* 599 */ 'x', 'm', 'm', '6', 0,
  /* 604 */ 'y', 'm', 'm', '6', 0,
  /* 609 */ 'z', 'm', 'm', '6', 0,
  /* 614 */ 'f', 'p', '6', 0,
  /* 618 */ 'c', 'r', '6', 0,
  /* 622 */ 'd', 'r', '6', 0,
  /* 626 */ 'x', 'm', 'm', '1', '7', 0,
  /* 632 */ 'y', 'm', 'm', '1', '7', 0,
  /* 638 */ 'z', 'm', 'm', '1', '7', 0,
  /* 644 */ 'x', 'm', 'm', '2', '7', 0,
  /* 650 */ 'y', 'm', 'm', '2', '7', 0,
  /* 656 */ 'z', 'm', 'm', '2', '7', 0,
  /* 662 */ 'k', '7', 0,
  /* 665 */ 'x', 'm', 'm', '7', 0,
  /* 670 */ 'y', 'm', 'm', '7', 0,
  /* 675 */ 'z', 'm', 'm', '7', 0,
  /* 680 */ 'f', 'p', '7', 0,
  /* 684 */ 'c', 'r', '7', 0,
  /* 688 */ 'd', 'r', '7', 0,
  /* 692 */ 'x', 'm', 'm', '1', '8', 0,
  /* 698 */ 'y', 'm', 'm', '1', '8', 0,
  /* 704 */ 'z', 'm', 'm', '1', '8', 0,
  /* 710 */ 'x', 'm', 'm', '2', '8', 0,
  /* 716 */ 'y', 'm', 'm', '2', '8', 0,
  /* 722 */ 'z', 'm', 'm', '2', '8', 0,
  /* 728 */ 'x', 'm', 'm', '8', 0,
  /* 733 */ 'y', 'm', 'm', '8', 0,
  /* 738 */ 'z', 'm', 'm', '8', 0,
  /* 743 */ 'c', 'r', '8', 0,
  /* 747 */ 'd', 'r', '8', 0,
  /* 751 */ 'x', 'm', 'm', '1', '9', 0,
  /* 757 */ 'y', 'm', 'm', '1', '9', 0,
  /* 763 */ 'z', 'm', 'm', '1', '9', 0,
  /* 769 */ 'x', 'm', 'm', '2', '9', 0,
  /* 775 */ 'y', 'm', 'm', '2', '9', 0,
  /* 781 */ 'z', 'm', 'm', '2', '9', 0,
  /* 787 */ 'x', 'm', 'm', '9', 0,
  /* 792 */ 'y', 'm', 'm', '9', 0,
  /* 797 */ 'z', 'm', 'm', '9', 0,
  /* 802 */ 'c', 'r', '9', 0,
  /* 806 */ 'd', 'r', '9', 0,
  /* 810 */ 'R', '1', '0', 'B', 'H', 0,
  /* 816 */ 'R', '1', '1', 'B', 'H', 0,
  /* 822 */ 'R', '1', '2', 'B', 'H', 0,
  /* 828 */ 'R', '1', '3', 'B', 'H', 0,
  /* 834 */ 'R', '1', '4', 'B', 'H', 0,
  /* 840 */ 'R', '1', '5', 'B', 'H', 0,
  /* 846 */ 'R', '8', 'B', 'H', 0,
  /* 851 */ 'R', '9', 'B', 'H', 0,
  /* 856 */ 'D', 'I', 'H', 0,
  /* 860 */ 'S', 'I', 'H', 0,
  /* 864 */ 'B', 'P', 'H', 0,
  /* 868 */ 'S', 'P', 'H', 0,
  /* 872 */ 'R', '1', '0', 'W', 'H', 0,
  /* 878 */ 'R', '1', '1', 'W', 'H', 0,
  /* 884 */ 'R', '1', '2', 'W', 'H', 0,
  /* 890 */ 'R', '1', '3', 'W', 'H', 0,
  /* 896 */ 'R', '1', '4', 'W', 'H', 0,
  /* 902 */ 'R', '1', '5', 'W', 'H', 0,
  /* 908 */ 'R', '8', 'W', 'H', 0,
  /* 913 */ 'R', '9', 'W', 'H', 0,
  /* 918 */ 'H', 'D', 'I', 0,
  /* 922 */ 'H', 'S', 'I', 0,
  /* 926 */ 'H', 'B', 'P', 0,
  /* 930 */ 'H', 'I', 'P', 0,
  /* 934 */ 'H', 'S', 'P', 0,
  /* 938 */ 'H', 'A', 'X', 0,
  /* 942 */ 'H', 'B', 'X', 0,
  /* 946 */ 'H', 'C', 'X', 0,
  /* 950 */ 'H', 'D', 'X', 0,
  /* 954 */ 'r', '1', '0', 'b', 0,
  /* 959 */ 'r', '1', '1', 'b', 0,
  /* 964 */ 'r', '1', '2', 'b', 0,
  /* 969 */ 'r', '1', '3', 'b', 0,
  /* 974 */ 'r', '1', '4', 'b', 0,
  /* 979 */ 'r', '1', '5', 'b', 0,
  /* 984 */ 'r', '8', 'b', 0,
  /* 988 */ 'r', '9', 'b', 0,
  /* 992 */ 'r', '1', '0', 'd', 0,
  /* 997 */ 'r', '1', '1', 'd', 0,
  /* 1002 */ 'r', '1', '2', 'd', 0,
  /* 1007 */ 'r', '1', '3', 'd', 0,
  /* 1012 */ 'r', '1', '4', 'd', 0,
  /* 1017 */ 'r', '1', '5', 'd', 0,
  /* 1022 */ 'r', '8', 'd', 0,
  /* 1026 */ 'r', '9', 'd', 0,
  /* 1030 */ 'd', 'i', 'r', 'f', 'l', 'a', 'g', 0,
  /* 1038 */ 'a', 'h', 0,
  /* 1041 */ 'b', 'h', 0,
  /* 1044 */ 'c', 'h', 0,
  /* 1047 */ 'd', 'h', 0,
  /* 1050 */ 'e', 'd', 'i', 0,
  /* 1054 */ 'r', 'd', 'i', 0,
  /* 1058 */ 'e', 's', 'i', 0,
  /* 1062 */ 'r', 's', 'i', 0,
  /* 1066 */ 'a', 'l', 0,
  /* 1069 */ 'b', 'l', 0,
  /* 1072 */ 'c', 'l', 0,
  /* 1075 */ 'd', 'l', 0,
  /* 1078 */ 'd', 'i', 'l', 0,
  /* 1082 */ 's', 'i', 'l', 0,
  /* 1086 */ 'b', 'p', 'l', 0,
  /* 1090 */ 's', 'p', 'l', 0,
  /* 1094 */ 'e', 'b', 'p', 0,
  /* 1098 */ 'r', 'b', 'p', 0,
  /* 1102 */ 'e', 'i', 'p', 0,
  /* 1106 */ 'r', 'i', 'p', 0,
  /* 1110 */ 'e', 's', 'p', 0,
  /* 1114 */ 'r', 's', 'p', 0,
  /* 1118 */ 's', 's', 'p', 0,
  /* 1122 */ 'c', 's', 0,
  /* 1125 */ 'd', 's', 0,
  /* 1128 */ 'e', 's', 0,
  /* 1131 */ 'f', 's', 0,
  /* 1134 */ 'f', 'l', 'a', 'g', 's', 0,
  /* 1140 */ 's', 's', 0,
  /* 1143 */ 'r', '1', '0', 'w', 0,
  /* 1148 */ 'r', '1', '1', 'w', 0,
  /* 1153 */ 'r', '1', '2', 'w', 0,
  /* 1158 */ 'r', '1', '3', 'w', 0,
  /* 1163 */ 'r', '1', '4', 'w', 0,
  /* 1168 */ 'r', '1', '5', 'w', 0,
  /* 1173 */ 'r', '8', 'w', 0,
  /* 1177 */ 'r', '9', 'w', 0,
  /* 1181 */ 'f', 'p', 's', 'w', 0,
  /* 1186 */ 'e', 'a', 'x', 0,
  /* 1190 */ 'r', 'a', 'x', 0,
  /* 1194 */ 'e', 'b', 'x', 0,
  /* 1198 */ 'r', 'b', 'x', 0,
  /* 1202 */ 'e', 'c', 'x', 0,
  /* 1206 */ 'r', 'c', 'x', 0,
  /* 1210 */ 'e', 'd', 'x', 0,
  /* 1214 */ 'r', 'd', 'x', 0,
  /* 1218 */ 'e', 'i', 'z', 0,
  /* 1222 */ 'r', 'i', 'z', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    1038, 1066, 1187, 1041, 1069, 1095, 864, 1086, 1195, 1044, 1072, 1122, 1203, 1030,
    1047, 1051, 856, 1078, 1075, 1125, 1211, 1186, 1094, 1194, 1202, 1050, 1210, 1134,
    1102, 1218, 1128, 1058, 1110, 1181, 1131, 1137, 938, 926, 942, 946, 918, 950,
    930, 922, 934, 1103, 1190, 1098, 1198, 1206, 1054, 1214, 1106, 1222, 1062, 1114,
    1059, 860, 1082, 1111, 868, 1090, 1140, 1118, 112, 211, 292, 373, 139, 238,
    319, 400, 476, 552, 618, 684, 743, 802, 66, 165, 264, 345, 426, 502,
    143, 242, 323, 404, 480, 556, 622, 688, 747, 806, 71, 170, 269, 350,
    431, 507, 135, 234, 315, 396, 472, 548, 614, 680, 117, 216, 297, 378,
    454, 530, 596, 662, 121, 220, 301, 382, 458, 534, 600, 666, 744, 803,
    67, 166, 265, 346, 427, 503, 0, 6, 12, 18, 24, 30, 36, 42,
    120, 219, 300, 381, 457, 533, 599, 665, 728, 787, 48, 147, 246, 327,
    408, 484, 560, 626, 692, 751, 76, 175, 274, 355, 436, 512, 578, 644,
    710, 769, 94, 193, 125, 224, 305, 386, 462, 538, 604, 670, 733, 792,
    54, 153, 252, 333, 414, 490, 566, 632, 698, 757, 82, 181, 280, 361,
    442, 518, 584, 650, 716, 775, 100, 199, 130, 229, 310, 391, 467, 543,
    609, 675, 738, 797, 60, 159, 258, 339, 420, 496, 572, 638, 704, 763,
    88, 187, 286, 367, 448, 524, 590, 656, 722, 781, 106, 205, 984, 988,
    954, 959, 964, 969, 974, 979, 846, 851, 810, 816, 822, 828, 834, 840,
    1022, 1026, 992, 997, 1002, 1007, 1012, 1017, 1173, 1177, 1143, 1148, 1153, 1158,
    1163, 1168, 908, 913, 872, 878, 884, 890, 896, 902,
  };

  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static char *printAliasInstr(MCInst *MI, SStream *OS)
{
  char *tmp, *AsmMnem, *AsmOps, *c;
  const char *AsmString;
  switch (MCInst_getOpcode(MI)) {
  default: return false;
  case X86_AAD8i8:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 10) {
      // (AAD8i8 10)
      AsmString = "aad";
      break;
    }
    return NULL;
  case X86_AAM8i8:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 10) {
      // (AAM8i8 10)
      AsmString = "aam";
      break;
    }
    return NULL;
  case X86_XSTORE:
    if (MCInst_getNumOperands(MI) == 0) {
      // (XSTORE)
      AsmString = "xstorerng";
      break;
    }
    return NULL;
  }


  tmp = cs_strdup(AsmString);
  AsmMnem = tmp;
  for(AsmOps = tmp; *AsmOps; AsmOps++) {
    if (*AsmOps == ' ' || *AsmOps == '\t') {
      *AsmOps = '\0';
      AsmOps++;
      break;
    }
  }
  SStream_concat0(OS, AsmMnem);
  if (*AsmOps) {
    SStream_concat0(OS, "\t");
    for (c = AsmOps; *c; c++) {
      if (*c == '$') {
        c += 1;
        if (*c == (char)0xff) {
          c += 1;
          // OpIdx = *c - 1;
          c += 1;
          // PrintMethodIdx = *c - 1;
          // printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, *c - 1, OS);
      } else {
        SStream_concat(OS, "%c", *c);
      }
    }
  }
  return tmp;
}

#endif // PRINT_ALIAS_INSTR
        
